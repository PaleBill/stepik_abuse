import pandas as pd
from bs4 import BeautifulSoup
# Загрузка HTML-страницы
html ="<h2>Связь «один ко многим»</h2>\n\n<p>Рассмотрим таблицу<strong><code> book</code></strong>(в ней столбец <code><strong>author</strong></code> переименован в <code><strong>name_author</strong></code>):</p>\n\n<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr style=\"background-color: #a9a9a9; background: #a9a9a9; text-align: center;\">\n\t\t\t<td><strong>book_id</strong></td>\n\t\t\t<td><strong>title</strong></td>\n\t\t\t<td><strong>name_author</strong></td>\n\t\t\t<td><strong>price</strong></td>\n\t\t\t<td><strong>amount</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Мастер и Маргарита</td>\n\t\t\t<td>Булгаков М.А.</td>\n\t\t\t<td>670.99</td>\n\t\t\t<td>3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Белая гвардия</td>\n\t\t\t<td>Булгаков М.А.</td>\n\t\t\t<td>540.50</td>\n\t\t\t<td>5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Идиот</td>\n\t\t\t<td>Достоевский Ф.М.</td>\n\t\t\t<td>460.00</td>\n\t\t\t<td>10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Братья Карамазовы</td>\n\t\t\t<td>Достоевский Ф.М.</td>\n\t\t\t<td>799.01</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Стихотворения и поэмы</td>\n\t\t\t<td>Есенин С.А.</td>\n\t\t\t<td>650.00</td>\n\t\t\t<td>15</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>В этой таблице фамилии авторов повторяются для нескольких книг. А что, если придется вместо инициалов для каждого автора хранить его полное имя и отчество? Тогда, если в таблице содержится информация о 50 книгах Достоевского, придется 50 раз исправлять «Ф.М.» на «Федор Михайлович». При этом, если в некоторых записях использовать «Фёдор Михайлович» (c буквой ё), то мы вообще получим двух разных авторов... </p>\n\n<p>Чтобы устранить эту проблему в реляционных базах данных создается новая таблица <code><strong>author</strong></code>,  в которой перечисляются все различные авторы, а затем эта таблица связывается с таблицей <code><strong>book</strong></code>. При этом такая связь называется «<strong>один ко многим</strong>», таблица <code><strong>author</strong></code> называется главной, таблица<code><strong> book </strong></code>– связанной или подчиненной. </p>\n\n<p>Связь «<strong>один ко многим</strong>» имеет место, когда одной записи главной таблицы соответствует несколько записей связанной таблицы, а каждой записи связанной таблицы соответствует только одна запись главной таблицы. Обозначается это так:</p>\n\n<p><img alt=\"\" src=\"https://ucarecdn.com/3a1dee13-b46f-476e-82ee-d3c0a99ef729/\"></p>\n\n<p><strong>Этапы реализации связи </strong>«<strong>один ко многим</strong>» на следующем примере:</p>\n\n<p>Один автор может написать несколько книг, а одна книга написана только одним автором. Для каждой книги известны ее количество и цена.</p>\n\n<p>1. Создать таблицу <code><strong>author</strong></code>,  в которую включить уникальных авторов книг, хранящихся на складе:</p>\n\n<p><img alt=\"\" src=\"https://ucarecdn.com/ebb2959d-32be-4d80-8855-abe8ce6ec4cb/\"></p>\n\n<p>2. Обе таблицы должны содержать первичный ключ, в таблице  <code><strong>book</strong></code>он уже есть,  в таблицу <code><strong>author</strong></code>добавим ключ <code><strong>author_id</strong></code>:</p>\n\n<p><img alt=\"\" src=\"https://ucarecdn.com/88d82e42-3e5b-4e9a-b8e0-78f27f348b1b/\"></p>\n\n<p>3. Включить в таблицу <code><strong>book</strong></code> связанный столбец (внешний ключ, <code><strong>FOREIGN KEY</strong></code>), соответствующий по имени и типу ключевому столбцу главной таблицы (в нашем случае это столбец<code><strong> author_id</strong></code>). Для наглядности связь на схеме обозначается стрелкой от ключевого столбца главной таблицы к внешнему ключу связной таблицы:</p>\n\n<p><img alt=\"\" src=\"https://ucarecdn.com/d504072b-bad1-4040-8f49-f5b7102fa1ca/\"></p>\n\n<h2>Задание</h2>\n\n<p>Добавить новую характеристику книги – ее жанр, если считать, что каждая книга относится к одному жанру, то есть между ними определена связь «<strong>один ко многим</strong>». Расположите в правильном порядке этапы связывания таблицы с жанрами (<code><strong>genre</strong></code>) и таблицы <code><strong>book</strong></code>.</p>"
soup = BeautifulSoup(html.encode('utf-8'), 'html.parser')

# Находим таблицу в HTML
table = soup.find('table')

# Считываем таблицу в DataFrame
df = pd.read_html(str(table))[0]

# # Вывод DataFrame
df.to_csv('TTETSTTST.csv', index=False)

