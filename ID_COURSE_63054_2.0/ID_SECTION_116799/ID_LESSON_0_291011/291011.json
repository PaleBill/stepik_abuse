[
    {
        "id_lesson": 291011,
        "steps": [
            {
                "id_step": 1090380,
                "text": {
                    "text": "Содержание урока\nСредствами SQL запросов можно выбирать и обрабатывать данные не только из одной таблицы, но из нескольких связанных таблиц. В данном уроке мы рассмотрим способы соединения таблиц:\n\nсвязь между таблицами «один ко многим»;\nсвязь между таблицами «многие ко многим»;\nсоздание таблицы с внешними ключами;\nдействия при удалении записи главной таблицы;\nзаполнение таблицы с внешними ключами;\nдобавление данных в таблицу с внешними ключами.\n",
                    "tables": []
                }
            },
            {
                "id_step": 1173151,
                "text": {
                    "text": "Связь «один ко многим»\nРассмотрим таблицу book(в ней столбец author переименован в name_author):\n\n[TABLE]\n\nВ этой таблице фамилии авторов повторяются для нескольких книг. А что, если придется вместо инициалов для каждого автора хранить его полное имя и отчество? Тогда, если в таблице содержится информация о 50 книгах Достоевского, придется 50 раз исправлять «Ф.М.» на «Федор Михайлович». При этом, если в некоторых записях использовать «Фёдор Михайлович» (c буквой ё), то мы вообще получим двух разных авторов... \nЧтобы устранить эту проблему в реляционных базах данных создается новая таблица author,  в которой перечисляются все различные авторы, а затем эта таблица связывается с таблицей book. При этом такая связь называется «один ко многим», таблица author называется главной, таблица book – связанной или подчиненной. \nСвязь «один ко многим» имеет место, когда одной записи главной таблицы соответствует несколько записей связанной таблицы, а каждой записи связанной таблицы соответствует только одна запись главной таблицы. Обозначается это так:\n\nЭтапы реализации связи «один ко многим» на следующем примере:\nОдин автор может написать несколько книг, а одна книга написана только одним автором. Для каждой книги известны ее количество и цена.\n1. Создать таблицу author,  в которую включить уникальных авторов книг, хранящихся на складе:\n\n2. Обе таблицы должны содержать первичный ключ, в таблице  bookон уже есть,  в таблицу authorдобавим ключ author_id:\n\n3. Включить в таблицу book связанный столбец (внешний ключ, FOREIGN KEY), соответствующий по имени и типу ключевому столбцу главной таблицы (в нашем случае это столбец author_id). Для наглядности связь на схеме обозначается стрелкой от ключевого столбца главной таблицы к внешнему ключу связной таблицы:\n\nЗадание\nДобавить новую характеристику книги – ее жанр, если считать, что каждая книга относится к одному жанру, то есть между ними определена связь «один ко многим». Расположите в правильном порядке этапы связывания таблицы с жанрами (genre) и таблицы book.",
                    "tables": [
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\"},\"1\":{\"0\":\"title\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Стихотворения и поэмы\"},\"2\":{\"0\":\"name_author\",\"1\":\"Булгаков М.А.\",\"2\":\"Булгаков М.А.\",\"3\":\"Достоевский Ф.М.\",\"4\":\"Достоевский Ф.М.\",\"5\":\"Есенин С.А.\"},\"3\":{\"0\":\"price\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"650.00\"},\"4\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"2\",\"5\":\"15\"}}"
                    ]
                }
            },
            {
                "id_step": 1173444,
                "text": {
                    "text": "Связь «многие ко многим»\nНа предыдущем шаге мы реализовали связь «один ко многим» для книг и авторов. Она означает, что каждый автор написал несколько книг, но каждую книгу написал только один автор. На самом деле, это не совсем верное утверждение. Например, книга «12 стульев» написана двумя авторами Ильфом И.А. и Петровым Е.П. С другой стороны, эти авторы написали и другие книги, например «Золотой теленок».\nДля соединения таких таблиц используется связь «многие ко многим».\nСвязь «многие ко многим» имеет место когда каждой записи одной таблицы соответствует несколько записей во второй, и наоборот, каждой записи второй таблицы соответствует несколько записей в первой. Обозначается это так:\n\nЭтапы реализации связи «многие ко многим»  на следующем примере:\nОдин автор может написать несколько книг, а одна книга может быть написана несколькими авторами. Для каждой книги известны ее количество и цена.\n1. Создать таблицу author,  в которую включить уникальных авторов книг, хранящихся на складе:\n\n2. В обеих таблицах необходимо определить первичный ключ, в нашем случае в таблице book он уже есть, поэтому достаточно включить первичный ключ author_id в таблицу author:\n\n3. Создать новую таблицу-связку, состоящую из двух столбцов, соответствующих по имени и типу ключевым столбцам исходных таблиц. Каждый из этих столбцов является внешним ключом (FOREIGN KEY)  и связан с ключевым столбцом каждой таблицы. Для наглядности связи на схеме обозначаются стрелкой от ключевого столбца исходной таблицы к внешнему ключу связной таблицы.\n\n4. Дальше необходимо определиться с первичным ключом таблицы-связки. Можно сделать два ключевых столбца, тогда все записи в этой таблице должны быть уникальными, то есть не повторяться. Для связи автор-книга этот вариант подходит. Но в некоторых случаях записи в таблице-связке могут повторяться, например, если мы будем продавать книги покупателям (один человек может купить несколько книг, а одну и ту же книгу могут купить несколько человек). Тогда в таблицу-связку включают дополнительные столбцы для идентификации записей, например, дату продажи,  также в таблицу-связку добавляют первичный ключ. Мы воспользуемся вторым способом:\n\nЗадание\nДобавить новую характеристику книги – ее жанр, если считать, что каждая книга может относиться к нескольким жанрам, а каждый жанр включает несколько книг, то есть между ними определена связь «многие ко многим».\nРасположите в правильном порядке этапы связывания таблиц genre и book.",
                    "tables": []
                }
            },
            {
                "id_step": 1173728,
                "text": {
                    "text": "Задание\nВыберите тип связи, который подходит для описания пар информационных объектов.",
                    "tables": []
                }
            },
            {
                "id_step": 1184279,
                "text": {
                    "text": "Задание\nДана таблица trip. Выберите одну или несколько схем, которые позволяют правильно представить информацию из этой таблицы в виде нескольких связанных таблиц.\n\n[TABLE]\n\nПояснение\nДля решения этой задачи необходимо:\n1. Проанализировать информацию и выделить повторяющиеся данные в отдельные таблицы. Это будут Сотрудники и Города.\n2. Определить тип связи между таблицами (многие ко многим или один ко многим), который позволит описать командировки сотрудников - выбрать верный вариант из предложенных. При этом связь один ко многим обозначается стрелкой (например,  для Дома и Квартиры определена связь один ко многим, которая обозначается как Дом --> Квартира).\n3. Определить, как данная связь реализуется в реляционной модели - выбрать верный вариант. \n\nПояснение от пользователя @Дмитрий_Ефремов\nЗдесь нужно выбрать не полностью готовую схему БД, а все адекватные связи, которые могли бы быть между этими таблицами (среди них 1-полная схема из 3 таблиц). Обращайте внимание на направление стрелочек.\n",
                    "tables": [
                        "{\"0\":{\"0\":\"trip_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\"},\"1\":{\"0\":\"name\",\"1\":\"Баранов П.Е.\",\"2\":\"Абрамова К.А.\",\"3\":\"Семенов И.В.\",\"4\":\"Семенов И.В.\"},\"2\":{\"0\":\"city\",\"1\":\"Москва\",\"2\":\"Владивосток\",\"3\":\"Москва\",\"4\":\"Владивосток\"},\"3\":{\"0\":\"per_diem\",\"1\":\"700\",\"2\":\"450\",\"3\":\"700\",\"4\":\"450\"},\"4\":{\"0\":\"date_first\",\"1\":\"2020-01-12\",\"2\":\"2020-01-14\",\"3\":\"2020-01-23\",\"4\":\"2020-02-12\"},\"5\":{\"0\":\"date_last\",\"1\":\"2020-01-17\",\"2\":\"2020-01-27\",\"3\":\"2020-01-31\",\"4\":\"2020-02-22\"}}"
                    ]
                }
            },
            {
                "id_step": 1091724,
                "text": {
                    "text": "Задание\nСоздать таблицу author следующей структуры:\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"Поле\",\"1\":\"author_id\",\"2\":\"name_author\"},\"1\":{\"0\":\"Тип, описание\",\"1\":\"INT PRIMARY KEY AUTO_INCREMENT\",\"2\":\"VARCHAR(50)\"}}"
                    ]
                }
            },
            {
                "id_step": 1092035,
                "text": {
                    "text": "Задание\nЗаполнить таблицу author. В нее включить следующих авторов:\n\nБулгаков М.А.\nДостоевский Ф.М.\nЕсенин С.А.\nПастернак Б.Л.\n\nРезультат\nAffected rows: 1\nAffected rows: 1\nAffected rows: 1\nAffected rows: 1\n\nQuery result:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n+-----------+------------------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1091727,
                "text": {
                    "text": "Создание таблицы с внешними ключами\nПри создании зависимой таблицы (таблицы, которая содержит внешние ключи) необходимо учитывать, что :\n\nкаждый внешний ключ должен иметь такой же тип данных, как связанное поле главной таблицы (в наших примерах это INT);\nнеобходимо указать главную для нее таблицу и столбец, по которому осуществляется связь:\n\nFOREIGN KEY (связанное_поле_зависимой_таблицы)  \nREFERENCES главная_таблица (связанное_поле_главной_таблицы)\nПо умолчанию любой столбец, кроме ключевого, может содержать значение NULL. При создании таблицы это можно переопределить,  используя  ограничение NOT NULL для этого столбца:\nCREATE TABLE таблица (\n    столбец_1 INT NOT NULL, \n    столбец_2 VARCHAR(10) \n);\n В созданной таблице в столбец_1 не может содержать пустое значение, а столбец_2 - может.\nДля внешних ключей рекомендуется устанавливать ограничение NOT NULL (если это совместимо с другими опциями, которые будут рассмотрены в следующем шаге).\n Пример\nСоздать таблицу book следующей структуры:\n\n[TABLE]\n\nЗапрос:\nCREATE TABLE book (\n    book_id INT PRIMARY KEY AUTO_INCREMENT, \n    title VARCHAR(50), \n    author_id INT NOT NULL, \n    price DECIMAL(8,2), \n    amount INT, \n    FOREIGN KEY (author_id)  REFERENCES author (author_id) \n);\nЗадание\nПерепишите запрос на создание таблицы book , чтобы ее структура соответствовала структуре, показанной на логической схеме (таблица genre уже создана, порядок следования столбцов - как на логической схеме в таблице book, genre_id  - внешний ключ) . Для genre_id ограничение о недопустимости пустых значений не задавать. В качестве главной таблицы для описания поля  genre_idиспользовать таблицу genre следующей структуры:\n\n[TABLE]\n\nЛогическая схема (нужно создать только таблицу book):\n\nРезультат\nAffected rows: 0\n",
                    "tables": [
                        "{\"0\":{\"0\":\"Поле\",\"1\":\"book_id\",\"2\":\"title\",\"3\":\"author_id\",\"4\":\"price\",\"5\":\"amount\"},\"1\":{\"0\":\"Тип, описание\",\"1\":\"INT PRIMARY KEY AUTO_INCREMENT\",\"2\":\"VARCHAR(50)\",\"3\":\"INT\",\"4\":\"DECIMAL(8, 2)\",\"5\":\"INT\"},\"2\":{\"0\":\"Связи\",\"1\":null,\"2\":null,\"3\":\"внешний ключ:  главная таблица author,  связанный столбец author.author_id,  пустое значение не допускается\",\"4\":null,\"5\":null}}",
                        "{\"0\":{\"0\":\"Поле\",\"1\":\"genre_id\",\"2\":\"name_genre\"},\"1\":{\"0\":\"Тип, описание\",\"1\":\"INT PRIMARY KEY AUTO_INCREMENT\",\"2\":\"VARCHAR(30)\"}}"
                    ]
                }
            },
            {
                "id_step": 1091842,
                "text": {
                    "text": "Действия при удалении записи главной таблицы\nС помощью выражения ON DELETE можно установить действия, которые выполняются для записей подчиненной таблицы при удалении связанной строки из главной таблицы. При удалении можно установить следующие опции:\n\nCASCADE: автоматически удаляет строки из зависимой таблицы при удалении  связанных строк в главной таблице.\nSET NULL: при удалении  связанной строки из главной таблицы устанавливает для столбца внешнего ключа значение NULL. (В этом случае столбец внешнего ключа должен поддерживать установку NULL).\nSET DEFAULT похоже на SET NULL за тем исключением, что значение  внешнего ключа устанавливается не в NULL, а в значение по умолчанию для данного столбца.\nRESTRICT: отклоняет удаление строк в главной таблице при наличии связанных строк в зависимой таблице.\n\nВажно! Если для столбца установлена опция SET NULL, то при его описании нельзя задать ограничение на пустое значение.\nПример\nБудем считать, что при удалении автора из таблицы author, необходимо удалить все записи о книгах из таблицы book, написанные этим автором. Данное действие необходимо прописать при создании таблицы.\nЗапрос:\nCREATE TABLE book (\n    book_id INT PRIMARY KEY AUTO_INCREMENT, \n    title VARCHAR(50), \n    author_id INT NOT NULL, \n    price DECIMAL(8,2), \n    amount INT, \n    FOREIGN KEY (author_id)  REFERENCES author (author_id) ON DELETE CASCADE\n);\nЗадание\nСоздать таблицу book той же структуры, что и на предыдущем шаге. Будем считать, что при удалении автора из таблицы author, должны удаляться все записи о книгах из таблицы book, написанные этим автором. А при удалении жанра из таблицы genre для соответствующей записи book установить значение Null в столбце genre_id. \nРезультат\nAffected rows: 0\n",
                    "tables": []
                }
            },
            {
                "id_step": 1091940,
                "text": {
                    "text": "Заполнение таблицы с внешними ключами\nНа предыдущих шагах были созданы и заполнены таблицы author:\n\n[TABLE]\n\nи  genre:\n\n[TABLE]\n\nЭти таблицы являются главными для таблицы book и связаны с ней через внешние ключи:\n\n При заполнении таблицы book в связанные столбцы необходимо заносить значения ключей главной таблицы. Например, Книгу «Игрок» написал Достоевский, поэтому значение поля author_id для этой записи должно быть  2, так как значение ключа для этого автора в таблице author равно 2. Значение поля genre_id для книги «Игрок» – 1, так как эта книга относится к жанру «Роман».\nЗадание\nДля каждой строки таблицы book занесите значения в поля author_id и genre_id. Считать, что книга Есенина относится к жанру «Поэзия», остальные книги – к жанру «Роман».\nЧерез запятую перечислены значения полей book_id,  title, author_id, genre_id,  price, amount каждой записи таблицы book. Заполните пропуски.\nАвторы и их произведения:\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\"},\"1\":{\"0\":\"name_author\",\"1\":\"Булгаков М.А.\",\"2\":\"Достоевский Ф.М.\",\"3\":\"Есенин С.А.\",\"4\":\"Пастернак Б.Л.\"}}",
                        "{\"0\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"2\"},\"1\":{\"0\":\"name_genre\",\"1\":\"Роман\",\"2\":\"Поэзия\"}}",
                        "{\"0\":{\"0\":\"Название книги\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Игрок\",\"6\":\"Стихотворения и поэмы\"},\"1\":{\"0\":\"Автор\",\"1\":\"Булгаков М.А.\",\"2\":\"Булгаков М.А.\",\"3\":\"Достоевский Ф.М.\",\"4\":\"Достоевский Ф.М.\",\"5\":\"Достоевский Ф.М.\",\"6\":\"Есенин С.А.\"},\"2\":{\"0\":\"Цена\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"480.50\",\"6\":\"650.00\"},\"3\":{\"0\":\"Количество\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"3\",\"5\":\"10\",\"6\":\"15\"}}"
                    ]
                }
            },
            {
                "id_step": 1091902,
                "text": {
                    "text": "Задание\nДобавьте три последние записи (с ключевыми значениями 6, 7, 8) в таблицу book, первые 5 записей уже добавлены:\n\n[TABLE]\n\nЛогическая схема базы данных:\n\nРезультат\nAffected rows: 1\nAffected rows: 1\nAffected rows: 1\nQuery result:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": [
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"6\",\"7\":\"7\",\"8\":\"8\"},\"1\":{\"0\":\"title\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Игрок\",\"6\":\"Стихотворения и поэмы\",\"7\":\"Черный человек\",\"8\":\"Лирика\"},\"2\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"3\",\"7\":\"3\",\"8\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\"},\"4\":{\"0\":\"price\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"480.50\",\"6\":\"650.00\",\"7\":\"570.20\",\"8\":\"518.99\"},\"5\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"3\",\"5\":\"10\",\"6\":\"15\",\"7\":\"6\",\"8\":\"2\"}}"
                    ]
                }
            }
        ]
    }
]