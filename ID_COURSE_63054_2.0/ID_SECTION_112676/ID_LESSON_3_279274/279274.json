[
    {
        "id_lesson": 279274,
        "steps": [
            {
                "id_step": 1032498,
                "text": {
                    "text": "Содержание урока\nSQL позволяет создавать вложенные запросы. Вложенный запрос (подзапрос, внутренний запрос) – это запрос внутри другого запроса SQL.\nВложенный запрос используется для выборки данных, которые будут использоваться в условии отбора записей основного запроса. Его применяют для:\n\nсравнения выражения с результатом вложенного запроса;\nопределения того, включено ли выражение в результаты вложенного запроса;\nпроверки того, выбирает ли запрос определенные строки.\n\nВложенный запрос имеет следующие компоненты:\n\nключевое слово SELECT  после которого указываются имена столбцов или выражения (чаще всего список содержит один элемент) ;\nключевое слово FROM и имя таблицы, из которой выбираются данные;\nнеобязательное предложение WHERE;\nнеобязательное предложение GROUP BY:\nнеобязательное предложение HAVING.\n\n Вложенные запросы  могут включаться в WHERE или HAVING так (в квадратных скобках указаны необязательные элементы, через | – один из элементов):\n\nWHERE | HAVING выражение оператор_сравнения (вложенный запрос);\nWHERE | HAVING выражение, включающее вложенный запрос;\nWHERE | HAVING выражение [NOT] IN (вложенный запрос);\nWHERE | HAVING выражение  оператор_сравнения  ANY | ALL (вложенный запрос).\n\nТакже вложенные запросы могут вставляться в основной запрос после ключевого слова SELECT.\nСтруктура и наполнение таблицы\nВсе запросы в данном уроке будут формулироваться для таблицы book(создание, заполнение):\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"INT PRIMARY KEY AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\"},\"1\":{\"0\":\"title\",\"1\":\"VARCHAR(50)\",\"2\":\"Мастер и Маргарита\",\"3\":\"Белая гвардия\",\"4\":\"Идиот\",\"5\":\"Братья Карамазовы\",\"6\":\"Игрок\",\"7\":\"Стихотворения и поэмы\"},\"2\":{\"0\":\"author\",\"1\":\"VARCHAR(30)\",\"2\":\"Булгаков М.А.\",\"3\":\"Булгаков М.А.\",\"4\":\"Достоевский Ф.М.\",\"5\":\"Достоевский Ф.М.\",\"6\":\"Достоевский Ф.М.\",\"7\":\"Есенин С.А.\"},\"3\":{\"0\":\"price\",\"1\":\"DECIMAL(8,2)\",\"2\":\"670.99\",\"3\":\"540.50\",\"4\":\"460.00\",\"5\":\"799.01\",\"6\":\"480.50\",\"7\":\"650.00\"},\"4\":{\"0\":\"amount\",\"1\":\"INT\",\"2\":\"3\",\"3\":\"5\",\"4\":\"10\",\"5\":\"3\",\"6\":\"10\",\"7\":\"15\"}}"
                    ]
                }
            },
            {
                "id_step": 1067038,
                "text": {
                    "text": "Вложенный запрос, возвращающий одно значение\nВложенный запрос, возвращающий одно значение, может использоваться в условии отбора записей WHERE как обычное значение совместно с операциями =, <>, >=, <=, >, <.\nПример\nВывести информацию о самых дешевых книгах, хранящихся на складе.\nДля реализации этого запроса нам необходимо получить минимальную цену из столбца price таблицы book, а затем вывести информацию о тех книгах, цена которых  равна минимальной. Первая часть  – поиск  минимума – реализуется вложенным запросом.\nЗапрос:\nSELECT title, author, price, amount\nFROM book\nWHERE price = (\n         SELECT MIN(price) \n         FROM book\n      );\nРезультат:\n+-------+------------------+--------+--------+\n| title | author           | price  | amount |\n+-------+------------------+--------+--------+\n| Идиот | Достоевский Ф.М. | 460.00 | 10     |\n+-------+------------------+--------+--------+\nВложенный запрос определяет минимальную цену книг во всей таблице (это 460.00), а затем в основном запросе для каждой записи проверяется, равна ли цена минимальному значению, если равна, информация о книге включается в результирующую таблицу запроса.\nРекомендация. При использовании вложенного запроса рекомендуется сначала проверить, правильно ли он работает (занести текст запроса в окно кода и нажать черную кнопку Запустить), если выдается верный результат – использовать код в качестве вложенного запроса.\nЗадание\nВывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.\nРезультат\n+------------------+---------------+--------+\n| author           | title         | price  |\n+------------------+---------------+--------+\n| Булгаков М.А.    | Белая гвардия | 540.50 |\n| Достоевский Ф.М. | Игрок         | 480.50 |\n| Достоевский Ф.М. | Идиот         | 460.00 |\n+------------------+---------------+--------+\n\nСтруктура и наполнение таблицы book\n+---------+-----------------------+------------------+--------+--------+\n| book_id | title                 | author           | price  | amount |\n+---------+-----------------------+------------------+--------+--------+\n| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |\n| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |\n| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |\n| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |\n| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |\n+---------+-----------------------+------------------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1067280,
                "text": {
                    "text": "Использование вложенного запроса в выражении\nВложенный запрос, возвращающий одно значение, может использоваться в выражениях как обычный операнд, например, к нему можно что-то прибавить, вычесть и пр.\nПример\nВывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3. То есть нужно вывести и те книги, количество экземпляров которых меньше среднего на 3, или больше среднего на 3.\nЗапрос:\nSELECT title, author, amount \nFROM book\nWHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;\nРезультат:\n+-----------------------+------------------+--------+\n| title                 | author           | amount |\n+-----------------------+------------------+--------+\n| Мастер и Маргарита    | Булгаков М.А.    | 3      |\n| Братья Карамазовы     | Достоевский Ф.М. | 3      |\n| Стихотворения и поэмы | Есенин С.А.      | 15     |\n+-----------------------+------------------+--------+\nЗадание\nВывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.\nРезультат\n+------------------+----------------+--------+\n| author           | title          | price  |\n+------------------+----------------+--------+\n| Достоевский Ф.М. | Идиот          | 460.00 |\n| Достоевский Ф.М. | Игрок          | 480.50 |\n| Булгаков М.А.    | Белая гвардия  | 540.50 |\n| Пушкин А.С.      | Евгений Онегин | 610.00 |\n+------------------+----------------+--------+\n\nСтруктура и наполнение таблицы book\n+---------+-----------------------+------------------+--------+--------+\n| book_id | title                 | author           | price  | amount |\n+---------+-----------------------+------------------+--------+--------+\n| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |\n| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |\n| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |\n| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |\n| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |\n| 7       | Евгений Онегин        | Пушкин А.С.      | 610.00 | 10     |\n+---------+-----------------------+------------------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1068776,
                "text": {
                    "text": "Вложенный запрос, оператор IN\nВложенный запрос может возвращать несколько значений одного столбца.  Тогда его можно использовать в разделе WHERE совместно с оператором IN.\nWHERE имя_столбца IN (вложенный запрос, возвращающий один столбец)\nОператор IN определяет, совпадает ли значение столбца с одним из значений, содержащихся во вложенном запросе. При этом логическое выражение после WHERE получает значение истина. Оператор NOT IN выполняет обратное действие – выражение истинно, если значение столбца не содержится во вложенном запросе.\nПример\nВывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12.\nЗапрос:\nSELECT title, author, amount, price\nFROM book\nWHERE author IN (\n        SELECT author \n        FROM book \n        GROUP BY author \n        HAVING SUM(amount) >= 12\n      );\nРезультат:\n+-----------------------+------------------+--------+--------+\n| title                 | author           | amount | price  |\n+-----------------------+------------------+--------+--------+\n| Идиот                 | Достоевский Ф.М. | 10     | 460.00 |\n| Братья Карамазовы     | Достоевский Ф.М. | 3      | 799.01 |\n| Игрок                 | Достоевский Ф.М. | 10     | 480.50 |\n| Стихотворения и поэмы | Есенин С.А.      | 15     | 650.00 |\n+-----------------------+------------------+--------+--------+\nВложенный запрос отбирает двух авторов (Достоевского и Есенина). А в основном запросе для каждой записи таблицы book  проверяется, входит ли автор книги в отобранный список, если входит - информация о книге включается в запрос.\nЗадание\nВывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.\nПояснение к заданию\nВ таблице book в столбце amount хранится количество экземпляров каждой книги:\n+-----------------------+--------+\n| title                 | amount |\n+-----------------------+--------+\n| Мастер и Маргарита    | 3      |\n| Белая гвардия         | 5      |\n| Идиот                 | 10     |\n| Братья Карамазовы     | 3      |\n| Игрок                 | 10     |\n| Стихотворения и поэмы | 15     |\n+-----------------------+--------+\nВ соответствии с этой таблицей:\n\nколичество экземпляров книг \"Мастер и Маргарита\" и \"Братья Карамазовы\" одинаково и равно 3 (так как число 3 встречается в таблице два раза, книги с таким количеством не подходят под условие);\nколичество экземпляров книг \"Идиот\" и \"Игрок\" тоже одинаково и равно 10 (не подходят под условие);\nколичество экземпляров книги \"Белая гвардия равно\" 5, при этом в таблице нет других книг, количество экземпляров которых равно 5, следовательно, эта книга подходит под условие задачи (так как количество экземпляров 5 в таблице не дублируется);\nколичество экземпляров книги \"Стихотворение и поэмы\"  - 15, в таблице нет других книг, количество экземпляров которых тоже равно 15, следовательно, и эта книга подходит под условие.\n\nТаким образом, необходимо вывести те строки таблицы, у которых числа в столбце amount не повторяются.\n\nРезультат\n+---------------+-----------------------+--------+\n| author        | title                 | amount |\n+---------------+-----------------------+--------+\n| Булгаков М.А. | Белая гвардия         | 5      |\n| Есенин С.А.   | Стихотворения и поэмы | 15     |\n+---------------+-----------------------+--------+\n\nПояснение к решению\nВо вложенном запросе отберите те значения столбца amount, количество которых, вычисленное с помощью функции count(), равно 1. \n\nСтруктура и наполнение таблицы book\n+---------+-----------------------+------------------+--------+--------+\n| book_id | title                 | author           | price  | amount |\n+---------+-----------------------+------------------+--------+--------+\n| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |\n| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |\n| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |\n| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |\n| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |\n+---------+-----------------------+------------------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1067571,
                "text": {
                    "text": "Вложенный запрос, операторы ANY и ALL\n Вложенный запрос, возвращающий несколько значений одного столбца, можно использовать для отбора записей с помощью операторов ANY и ALL совместно с операциями отношения (=, <>, <=, >=, <, >).\nОператоры ANY и ALL используются  в SQL для сравнения некоторого значения с результирующим набором вложенного запроса, состоящим из одного столбца. При этом тип данных столбца, возвращаемого вложенным запросом, должен совпадать с типом данных столбца (или выражения), с которым происходит сравнение.\nПри использовании оператора ANY в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно хотя бы для одного элемента результирующего запроса. Как работает оператор ANY:\n\n\namount > ANY (10, 12) эквивалентно amount > 10\n\n\namount < ANY (10, 12) эквивалентно amount < 12\n\n\namount = ANY (10, 12) эквивалентно (amount = 10) OR (amount = 12), а также amount IN  (10,12)\n\n\namount <> ANY (10, 12) вернет все записи с любым значением amount, включая 10 и 12\n\n\nПри использовании оператора ALL в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно для всех элементов результирующего запроса. Как работает оператор ALL:\n\n\namount > ALL (10, 12) эквивалентно amount > 12\n\n\namount < ALL (10, 12) эквивалентно amount < 10\n\namount = ALL (10, 12) не вернет ни одной записи, так как эквивалентно (amount = 10) AND (amount = 12)\n\namount <> ALL (10, 12) вернет все записи кроме тех,  в которыхamount равно 10 или 12\n\n\nВажно! Операторы ALL и ANY можно использовать только с вложенными запросами. В примерах выше (10, 12) приводится как результат вложенного запроса просто для того, чтобы показать как эти операторы работают. В запросах так записывать нельзя.\nПример\nВывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.\nЗапрос:\nSELECT title, author, amount, price\nFROM book\nWHERE amount < ALL (\n        SELECT AVG(amount) \n        FROM book \n        GROUP BY author \n      );\nРезультат:\n+--------------------+------------------+--------+--------+\n| title              | author           | amount | price  |\n+--------------------+------------------+--------+--------+\n| Мастер и Маргарита | Булгаков М.А.    | 3      | 670.99 |\n| Братья Карамазовы  | Достоевский Ф.М. | 3      | 799.01 |\n+--------------------+------------------+--------+--------+\nПояснение\n1. Вложенный запрос\nSELECT AVG(amount) \n        FROM book \n        GROUP BY author\nотбирает следующие записи:\n+-------------+\n| AVG(amount) |\n+-------------+\n| 4.0000      |\n| 7.6667      |\n| 15.0000     |\n+-------------+\n2. Условие отбора в основном запросе\namount < ALL (\n        SELECT AVG(amount) \n        FROM book \n        GROUP BY author \n      )\nможно переписать (если заменить вложенный запрос списком отобранных значений):\namount < ALL ( 4.0000, 7.6667, 15.0000)\nчто в соответствии с определением ALL, это значит, что подходят все amount меньшие 4.000.\nТаким образом, наш запрос отобрал все книги книги Мастер и Маргарита и Братья Карамазовы, количество которых равно 3. \n\nПример\nВывести информацию о тех книгах, количество которых меньше самого большого среднего количества книг каждого автора.\nЗапрос:\nSELECT title, author, amount, price\nFROM book\nWHERE amount < ANY (\n        SELECT AVG(amount) \n        FROM book \n        GROUP BY author \n      );\nРезультат:\n+--------------------+------------------+--------+--------+\n| title              | author           | amount | price  |\n+--------------------+------------------+--------+--------+\n| Мастер и Маргарита | Булгаков М.А.    | 3      | 670.99 |\n| Белая гвардия      | Булгаков М.А.    | 5      | 540.50 |\n| Идиот              | Достоевский Ф.М. | 10     | 460.00 |\n| Братья Карамазовы  | Достоевский Ф.М. | 3      | 799.01 |\n| Игрок              | Достоевский Ф.М. | 10     | 480.50 |\n+--------------------+------------------+--------+--------+\nПояснение\nВ этом примере amount < ANY ( 4.0000, 7.6667, 15.0000)  означает, что подходят amount меньше самого большого значения из списка.\n\nЗадание\nВывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.\nРезультат\n+------------------+---------------+--------+\n| author           | title         | price  |\n+------------------+---------------+--------+\n| Булгаков М.А.    | Белая гвардия | 540.50 |\n| Достоевский Ф.М. | Идиот         | 460.00 |\n| Достоевский Ф.М. | Игрок         | 480.50 |\n+------------------+---------------+--------+\n\nСтруктура и наполнение таблицы book\n+---------+-----------------------+------------------+--------+--------+\n| book_id | title                 | author           | price  | amount |\n+---------+-----------------------+------------------+--------+--------+\n| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |\n| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |\n| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |\n| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |\n| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |\n+---------+-----------------------+------------------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1068801,
                "text": {
                    "text": "Вложенный запрос после SELECT\nВложенный запрос может располагаться после ключевого слова SELECT. В этом случае результат выполнения запроса выводится в отдельном столбце результирующей таблицы. При этом результатом запроса может быть только одно значение, тогда оно будет повторяться во всех строках. Также вложенный запрос может использоваться в выражениях.\nПример\nВывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3,  а также указать среднее значение количества экземпляров книг.\nЗапрос:\nSELECT title, author, amount, \n    (\n     SELECT AVG(amount) \n     FROM book\n    ) AS Среднее_количество \nFROM book\nWHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;\nПояснение\nВ запросе используется функция модуля, которая позволяет учесть, что количество может отличаться от среднего как в большую, так и в меньшую сторону.\n\nРезультат:\n+-----------------------+------------------+--------+--------------------+\n| title                 | author           | amount | Среднее_количество |\n+-----------------------+------------------+--------+--------------------+\n| Мастер и Маргарита    | Булгаков М.А.    | 3      | 7.6667             |\n| Братья Карамазовы     | Достоевский Ф.М. | 3      | 7.6667             |\n| Стихотворения и поэмы | Есенин С.А.      | 15     | 7.6667             |\n+-----------------------+------------------+--------+--------------------+\nВо вложенном запросе вычисляется среднее количество экземпляров книг на складе. Этот запрос используется и в условии отбора, и для создания столбца Среднее_количество в результирующей таблице запроса. Значения  столбца одинаковы во всех строках, поскольку  вложенный запрос возвращает одно значение.\nСреднее количество в виде дробного числа выглядит не очень правильно. Полученное значение можно округлить \"вниз\" - до ближайшего меньшего целого.\nЗапрос:\nSELECT title, author, amount, \n      FLOOR((SELECT AVG(amount) FROM book)) AS Среднее_количество \nFROM book\nWHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;\nРезультат:\n+-----------------------+------------------+--------+--------------------+\n| title                 | author           | amount | Среднее_количество |\n+-----------------------+------------------+--------+--------------------+\n| Мастер и Маргарита    | Булгаков М.А.    | 3      | 7                  |\n| Братья Карамазовы     | Достоевский Ф.М. | 3      | 7                  |\n| Стихотворения и поэмы | Есенин С.А.      | 15     | 7                  |\n+-----------------------+------------------+--------+--------------------+\nЗадание\nПосчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.\nРезультат\n+--------------------+------------------+--------+-------+\n| title              | author           | amount | Заказ |\n+--------------------+------------------+--------+-------+\n| Мастер и Маргарита | Булгаков М.А.    | 3      | 12    |\n| Белая гвардия      | Булгаков М.А.    | 5      | 10    |\n| Идиот              | Достоевский Ф.М. | 10     | 5     |\n| Братья Карамазовы  | Достоевский Ф.М. | 3      | 12    |\n| Игрок              | Достоевский Ф.М. | 10     | 5     |\n+--------------------+------------------+--------+-------+\n\nПояснение\nПоскольку книгу с максимальным количеством экземпляров заказывать не нужно, в условии отбора запроса укажите, что книгу с максимальным значением количества в результирующую таблицу не включать. \n\nСтруктура и наполнение таблицы book\n+---------+-----------------------+------------------+--------+--------+\n| book_id | title                 | author           | price  | amount |\n+---------+-----------------------+------------------+--------+--------+\n| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |\n| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |\n| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |\n| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |\n| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |\n+---------+-----------------------+------------------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1067234,
                "text": {
                    "text": "Задание\nПридумайте один или несколько запросов к нашей таблице book, используя вложенные запросы. Проверьте, правильно ли они работают.\nПри желании можно формулировку запросов  разместить в комментариях. \nРазмещенные задания можно использовать для закрепления материала урока.\nОценивайте понравившиеся Вам запросы.\nВ последнем модуле создан отдельный урок, в котором  мы разместим запросы, набравшие наибольшее количество лайков. \nСтруктура и наполнение таблицы book:\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"INT PRIMARY KEY AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\"},\"1\":{\"0\":\"title\",\"1\":\"VARCHAR(50)\",\"2\":\"Мастер и Маргарита\",\"3\":\"Белая гвардия\",\"4\":\"Идиот\",\"5\":\"Братья Карамазовы\",\"6\":\"Игрок\",\"7\":\"Стихотворения и поэмы\"},\"2\":{\"0\":\"author\",\"1\":\"VARCHAR(30)\",\"2\":\"Булгаков М.А.\",\"3\":\"Булгаков М.А.\",\"4\":\"Достоевский Ф.М.\",\"5\":\"Достоевский Ф.М.\",\"6\":\"Достоевский Ф.М.\",\"7\":\"Есенин С.А.\"},\"3\":{\"0\":\"price\",\"1\":\"DECIMAL(8,2)\",\"2\":\"670.99\",\"3\":\"540.50\",\"4\":\"460.00\",\"5\":\"799.01\",\"6\":\"480.50\",\"7\":\"650.00\"},\"4\":{\"0\":\"amount\",\"1\":\"INT\",\"2\":\"3\",\"3\":\"5\",\"4\":\"10\",\"5\":\"3\",\"6\":\"10\",\"7\":\"15\"}}"
                    ]
                }
            }
        ]
    }
]