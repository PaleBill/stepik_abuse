[
    {
        "id_lesson": 291017,
        "steps": [
            {
                "id_step": 1090390,
                "text": {
                    "text": "Предметная область\nВ интернет-магазине продаются книги. Каждая книга имеет название, написана одним автором, относится к одному жанру, имеет определенную цену. В магазине в наличии есть несколько экземпляров каждой книги. \nПокупатель регистрируется на сайте интернет-магазина, задает свое имя и фамилию, электронную почту и город проживания. Он может сформировать один или несколько заказов, для каждого заказа написать какие-то пожелания. Каждый заказ включает одну или несколько книг, каждую книгу можно заказать в нескольких экземплярах. Затем заказ проходит ряд последовательных этапов (операций): оплачивается, упаковывается, передается курьеру или транспортной компании для транспортировки и, наконец, доставляется покупателю. Фиксируется дата каждой операции. Для каждого города известно среднее время доставки книг.\nПри этом в магазине ведется учет книг, при покупке их количество уменьшается, при поступлении товара увеличивается, при исчерпании количества – оформляется заказ и пр.\nВ данном уроке сначала будет построена концептуальная модель базы данных, затем ее логическая модель. Также будут определены структура и содержание таблиц базы данных «Интернет-магазин книг».\nЗатем для разработанной базы данных рассматриваются следующие запросы:\n\nВывести фамилии всех клиентов, которые заказали определенную книгу.\nПосчитать, сколько раз была заказана каждая книга.\nВывести города, в которых живут клиенты магазина.\nВывести информацию об оплате каждого заказа.\nВывести подробную информацию о каждом заказе.\nВывести информацию о движении каждого заказа.\nВывести заказы, доставленные с опозданием.\nВывести клиентов, которые заказывали книги определенного автора.\nВывести самый популярный жанр.\nСравнить ежемесячную выручку за текущий и прошлый год.\n\n ",
                    "tables": []
                }
            },
            {
                "id_step": 1184350,
                "text": {
                    "text": "Проектирование концептуальной модели базы данных\nШаг 1. Детально проанализировать предметную область и выделить те информационные объекты, которые будут храниться в базе данных (выделены зеленым):\n\nВ интернет-магазине продаются книги. Каждая книга имеет название, написана одним автором, относится к одному жанру, имеет определенную цену. В магазине в наличии есть несколько экземпляров каждой книги. \nПокупатель регистрируется на сайте интернет-магазина, задает свое имя и фамилию,  электронную почту и город проживания (для упрощения считаем, что человек не может поменять свой город проживания). Он может сформировать один или несколько заказов,  для каждого заказа написать какие-то пожелания. Каждый заказ включает одну или несколько книг, каждую книгу можно заказать в нескольких экземплярах. Затем заказ проходит ряд последовательных этапов (операций): оплачивается, упаковывается, передается курьеру или транспортной компании для транспортировки и, наконец, доставляется покупателю. Фиксируется дата каждой операции. Для каждого города известно среднее время доставки книг.\nПри этом в магазине ведется учет книг, при покупке их количество уменьшается, при поступлении товара увеличивается, при исчерпании количества – оформляется заказ и пр.\n\nШаг 2. Для каждого выделенного информационного объекта указать его характеристики, для этого:\nа) сначала выделить их в описании предметной области (синий цвет): \n\nВ интернет-магазине продаются книги. Каждая книга имеет название, написана одним автором, относится к одному жанру, имеет определенную цену. В магазине в наличии есть несколько экземпляров каждой книги. \nПокупатель регистрируется на сайте интернет-магазина, задает свое имя и фамилию,  электронную почту и город проживания. Он может сформировать один или несколько заказов, для каждого заказа написать какие-то пожелания. Каждый заказ включает одну или несколько книг, каждую книгу можно заказать в нескольких экземплярах. Затем заказ проходит ряд последовательных этапов(операций): оплачивается, упаковывается, передается курьеру или транспортной компании для транспортировки и, наконец, доставляется покупателю. Фиксируется дата каждой операции. Для каждого города известно среднее время доставки книг.\nПри этом в магазине ведется учет книг, при покупке их количество уменьшается, при поступлении товара увеличивается, при исчерпании количества – оформляется заказ и пр.\n\nб) затем связать их с информационным объектом: \n\nКнига – название, количество, цена;\nАвтор – фамилия и инициалы;\nЖанр – название;\nПокупатель (клиент) – фамилия и имя, электронная почта;\nГород – название, среднее время доставки;\nЗаказ – код заказа, пожелания;\nЭтап – название этапов.\n\nв) перечислить характеристики, которые остались не привязанными к информационным объектам (к ним необходимо вернуться при реализации связей между таблицами): \n\nкниги в заказе;\nколичество книг в заказе;\nдата каждой операции.\n\nШаг 3. Нарисовать схему, на которой изобразить информационные объекты в виде прямоугольников:\n\n \nШаг 4. Установить связи между информационными объектами. Связь «один ко многим» обозначить в виде →, «многие ко многим» –  ↔.\n\nКаждая книга написана одним автором, каждый автор написал несколько книг, следовательно между этими таблицами связь «один ко многим»:\n\n\n\nКаждая книга может включаться в несколько заказов, один заказ может содержать несколько книг, между этими таблицами связь «многие ко многим»:\n\n\n\nКаждый клиент может сформировать несколько заказов, каждый заказ формируется только одним клиентом:\n\n\nЗадание\nУстановите связи между информационными объектами Жанр и Книга, Город и Клиент, Заказ и Этапы. Выберите верную концептуальную схему.",
                    "tables": []
                }
            },
            {
                "id_step": 1184712,
                "text": {
                    "text": "Построение логической схемы базы данных\nНа предыдущем шаге получена концептуальная модель базы данных:\n\nНа основе этой модели создается логическая модель, в которой информационные объекты описываются в виде реляционных таблиц.\nДля каждой пары таблиц необходимо выполнить следующие шаги:\nШаг 1. Выбрать пару таблиц из схемы, например:\n\nШаг 2. Разработать структуру таблиц для каждого информационного объекта. Таблица в качестве столбцов должна включать все характеристики информационного объекта, полученные на этапе концептуального проектирования, кроме тех, которые соответствуют названиям других информационных объектов. Они будут включены в таблицы при создании связей.  В нашем случае это:\n\nШаг 3. Реализовать связь между таблицами, в нашем случае это связь «один ко многим»:\n\nШаг 4. Вернуться к описанию концептуальной модели и проверить, нужно ли включить какие-то характеристики, непривязанные к информационным объектам? В нашем случае ничего добавлять не надо. Чаще всего характеристики добавляются при реализации связи «многие ко многим».\nПродолжим построение логической схемы:\nШаг 1. Выберем следующую пару таблиц:\n\nШаг 2. Структура таблиц каждого информационного объекта (сохраняем уже полученные ранее структуры таблиц):\n\nШаг 3. Реализуем связь «многие ко многим»:\n\nШаг 4. В описании предметной области указывается, что нужно хранить количество книг, которые включены в заказ. Добавим эту характеристику в таблицу-связку buy_book:\n\nАналогично создаются реляционные таблицы для остальных пар информационных объектов.\nЗадание\n Сопоставьте фрагменты концептуальной модели с фрагментами логической модели.",
                    "tables": []
                }
            },
            {
                "id_step": 1184986,
                "text": {
                    "text": "Создание базы данных\n​Логическая модель базы данных\n​\nЛогическая модель базы данных служит основой для физической модели, в которой определяются характеристики каждого столбца (тип и другие опции). После создания структуры, таблицы наполняются информацией.\nСтруктура и наполнение таблиц базы данных «Интернет-магазин книг»\nТаблица author (создание, заполнение):\n\n[TABLE]\n\nТаблица genre (создание, заполнение, рассмотрено в качестве примеров):\n\n[TABLE]\n\nТаблица book (создание, заполнение):\n\n[TABLE]\n\n\nТаблица city (в последнем столбце указано примерное количество дней, необходимое для доставки товара в каждый город):\n\n[TABLE]\n\nТаблица client:\n\n[TABLE]\n\nТаблица buy (столбец buy_description предназначен для пожеланий покупателя, которые он хочет добавить в свой заказ, если пожеланий нет - поле остается пустым):\n\n[TABLE]\n\nТаблица buy_book:\n\n[TABLE]\n\nТаблица step:\n\n[TABLE]\n\nТаблица buy_step ( если столбец date_step_end не заполнен (имеет значение Null), это означает что операция еще не выполнена, например для заказа с id 2, книги переданы для доставки 2020-03-02, но еще не доставлены):\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\"},\"1\":{\"0\":\"name_author\",\"1\":\"Булгаков М.А.\",\"2\":\"Достоевский Ф.М.\",\"3\":\"Есенин С.А.\",\"4\":\"Пастернак Б.Л.\",\"5\":\"Лермонтов М.Ю.\"}}",
                        "{\"0\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_genre\",\"1\":\"Роман\",\"2\":\"Поэзия\",\"3\":\"Приключения\"}}",
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"6\",\"7\":\"7\",\"8\":\"8\"},\"1\":{\"0\":\"title\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Игрок\",\"6\":\"Стихотворения и поэмы\",\"7\":\"Черный человек\",\"8\":\"Лирика\"},\"2\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"3\",\"7\":\"3\",\"8\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\"},\"4\":{\"0\":\"price\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"480.50\",\"6\":\"650.00\",\"7\":\"570.20\",\"8\":\"518.99\"},\"5\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"2\",\"5\":\"10\",\"6\":\"15\",\"7\":\"6\",\"8\":\"2\"}}",
                        "{\"0\":{\"0\":\"city_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\"},\"1\":{\"0\":\"name_city\",\"1\":\"VARCHAR(30)\",\"2\":\"Москва\",\"3\":\"Санкт-Петербург\",\"4\":\"Владивосток\"},\"2\":{\"0\":\"days_delivery\",\"1\":\"INT\",\"2\":\"5\",\"3\":\"3\",\"4\":\"12\"}}",
                        "{\"0\":{\"0\":\"client_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\"},\"1\":{\"0\":\"name_client\",\"1\":\"VARCHAR(50)\",\"2\":\"Баранов Павел\",\"3\":\"Абрамова Катя\",\"4\":\"Семенонов Иван\",\"5\":\"Яковлева Галина\"},\"2\":{\"0\":\"city_id\",\"1\":\"INT\",\"2\":\"3\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\"},\"3\":{\"0\":\"email\",\"1\":\"VARCHAR(30)\",\"2\":\"baranov@test\",\"3\":\"abramova@test\",\"4\":\"semenov@test\",\"5\":\"yakovleva@test\"}}",
                        "{\"0\":{\"0\":\"buy_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\"},\"1\":{\"0\":\"buy_description\",\"1\":\"VARCHAR(100)\",\"2\":\"Доставка только вечером\",\"3\":null,\"4\":\"Упаковать каждую книгу по отдельности\",\"5\":null},\"2\":{\"0\":\"client_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"3\",\"4\":\"2\",\"5\":\"1\"}}",
                        "{\"0\":{\"0\":\"buy_book_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\",\"9\":\"8\"},\"1\":{\"0\":\"buy_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"2\",\"6\":\"3\",\"7\":\"3\",\"8\":\"3\",\"9\":\"4\"},\"2\":{\"0\":\"book_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"7\",\"4\":\"3\",\"5\":\"8\",\"6\":\"3\",\"7\":\"2\",\"8\":\"1\",\"9\":\"5\"},\"3\":{\"0\":\"amount\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"1\",\"5\":\"2\",\"6\":\"2\",\"7\":\"1\",\"8\":\"1\",\"9\":\"1\"}}",
                        "{\"0\":{\"0\":\"step_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\"},\"1\":{\"0\":\"name_step\",\"1\":\"VARCHAR(30)\",\"2\":\"Оплата\",\"3\":\"Упаковка\",\"4\":\"Транспортировка\",\"5\":\"Доставка\"}}",
                        "{\"0\":{\"0\":\"buy_step_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\",\"9\":\"8\",\"10\":\"9\",\"11\":\"10\",\"12\":\"11\",\"13\":\"12\",\"14\":\"13\",\"15\":\"14\",\"16\":\"15\",\"17\":\"16\"},\"1\":{\"0\":\"buy_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\",\"9\":\"2\",\"10\":\"3\",\"11\":\"3\",\"12\":\"3\",\"13\":\"3\",\"14\":\"4\",\"15\":\"4\",\"16\":\"4\",\"17\":\"4\"},\"2\":{\"0\":\"step_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"4\",\"10\":\"1\",\"11\":\"2\",\"12\":\"3\",\"13\":\"4\",\"14\":\"1\",\"15\":\"2\",\"16\":\"3\",\"17\":\"4\"},\"3\":{\"0\":\"date_step_beg\",\"1\":\"DATE\",\"2\":\"2020-02-20\",\"3\":\"2020-02-20\",\"4\":\"2020-02-22\",\"5\":\"2020-03-08\",\"6\":\"2020-02-28\",\"7\":\"2020-02-29\",\"8\":\"2020-03-02\",\"9\":null,\"10\":\"2020-03-05\",\"11\":\"2020-03-05\",\"12\":\"2020-03-06\",\"13\":\"2020-03-11\",\"14\":\"2020-03-20\",\"15\":null,\"16\":null,\"17\":null},\"4\":{\"0\":\"date_step_end\",\"1\":\"DATE\",\"2\":\"2020-02-20\",\"3\":\"2020-02-21\",\"4\":\"2020-03-07\",\"5\":\"2020-03-08\",\"6\":\"2020-02-28\",\"7\":\"2020-03-01\",\"8\":null,\"9\":null,\"10\":\"2020-03-05\",\"11\":\"2020-03-06\",\"12\":\"2020-03-10\",\"13\":null,\"14\":null,\"15\":null,\"16\":null,\"17\":null}}"
                    ]
                }
            },
            {
                "id_step": 1109830,
                "text": {
                    "text": "Запросы на основе трех и более связанных таблиц\nПример\nВывести фамилии всех клиентов, которые заказали книгу Булгакова «Мастер и Маргарита».\nЗапрос:\nЭтот запрос строится на основе нескольких таблиц, для удобства нужно определить фрагмент логической схемы базы данных, на основе которой строится запрос. В нашем случае выбираются название книги из таблицы book и фамилия клиента из таблицы client. Эти таблицы между собой непосредственно не связаны, поэтому нужно добавить «связующие» таблицы  buy и buy_book:\n \nДля соединения этих таблиц используется INNER JOIN. Для удобства рекомендуется связи описывать последовательно: client → buy → buy_book → book.  А для соединения использовать пару первичный ключ и внешний ключ соответствующих таблиц. Например, соединение таблиц client и buy осуществляется по условию client.client_id = buy.client_id.\nЧтобы не усложнять схему, будем считать, что нам известен id Булгакова (это 1)\nSELECT DISTINCT name_client\nFROM \n    client \n    INNER JOIN buy ON client.client_id = buy.client_id\n    INNER JOIN buy_book ON buy_book.buy_id = buy.buy_id\n    INNER JOIN book ON buy_book.book_id=book.book_id\nWHERE title ='Мастер и Маргарита' and author_id = 1;                    \nВ запросе отбираются уникальные клиенты (DISTINCT) так как один и тот же клиент мог заказать одну и ту же книгу несколько раз.\nРезультат:\n+---------------+\n| name_client   |\n+---------------+\n| Баранов Павел |\n| Абрамова Катя |\n+---------------+\nЗадание\nВывести все заказы Баранова Павла (id заказа, какие книги, по какой цене и в каком количестве он заказал) в отсортированном по номеру заказа и названиям книг виде.\nПояснение\nЕсли в нескольких таблицах столбцы называются одинаково – необходимо явно указывать из какой таблицы берется столбец. Например, столбец amount есть и в таблице book, и в таблице buy_book. В запросе нужно указать количество заказанных книг, то есть buy_book.amount.\n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nусловие отбора (шаг, шаг);\nсортировка.\n\n\nРезультат\n+--------+--------------------+--------+--------+\n| buy_id | title              | price  | amount |\n+--------+--------------------+--------+--------+\n| 1      | Идиот              | 460.00 | 1      |\n| 1      | Мастер и Маргарита | 670.99 | 1      |\n| 1      | Черный человек     | 570.20 | 2      |\n| 4      | Игрок              | 480.50 | 1      |\n+--------+--------------------+--------+--------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1111665,
                "text": {
                    "text": "Задание\nПосчитать, сколько раз была заказана каждая книга, для книги вывести ее автора (нужно посчитать, в каком количестве заказов фигурирует каждая книга).  Вывести фамилию и инициалы автора, название книги, последний столбец назвать Количество. Результат отсортировать сначала  по фамилиям авторов, а потом по названиям книг.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля того, чтобы были выведены книги, которые клиенты не заказывали, использовать внешнее соединение.\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц (шаг, шаг);\nгрупповые функции;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\nПосчитать, сколько раз была заказана каждая книга, для книги вывести ее автора (нужно посчитать, в каком количестве заказов фигурирует каждая книга).  Вывести фамилию и инициалы автора, название книги, последний столбец назвать Количество. Результат отсортировать сначала  по фамилиям авторов, а потом по названиям книг.\n\nРезультат\n+------------------+-----------------------+------------+\n| name_author      | title                 | Количество |\n+------------------+-----------------------+------------+\n| Булгаков М.А.    | Белая гвардия         | 1          |\n| Булгаков М.А.    | Мастер и Маргарита    | 2          |\n| Достоевский Ф.М. | Братья Карамазовы     | 0          |\n| Достоевский Ф.М. | Игрок                 | 1          |\n| Достоевский Ф.М. | Идиот                 | 2          |\n| Есенин С.А.      | Стихотворения и поэмы | 0          |\n| Есенин С.А.      | Черный человек        | 1          |\n| Пастернак Б.Л.   | Лирика                | 1          |\n+------------------+-----------------------+------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1112388,
                "text": {
                    "text": "Задание \nВывести города, в которых живут клиенты, оформлявшие заказы в интернет-магазине. Указать количество заказов в каждый город, этот столбец назвать Количество. Информацию вывести по убыванию количества заказов, а затем в алфавитном порядке по названию городов.\nФрагмент логической схемы базы данных:\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) :\n\nВывести города, в которых живут клиенты, оформлявшие заказы в интернет-магазине. Указать количество заказов в каждый город, этот столбец назвать Количество. Информацию вывести по убыванию количества заказов, а затем в алфавитном порядке по названию городов.\n\nРезультат\n+-----------------+------------+\n| name_city       | Количество |\n+-----------------+------------+\n| Владивосток     | 2          |\n| Москва          | 1          |\n| Санкт-Петербург | 1          |\n+-----------------+------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1112032,
                "text": {
                    "text": "Задание\nВывести номера всех оплаченных заказов и даты, когда они были оплачены.\nФрагмент логической схемы базы данных:\n​​\nПояснение\nС каждым заказом в таблице buy_step связаны 4 записи, которые фиксируют этапы  заказа.\n\nДля каждого заказа сначала выставляется счет на оплату ( в запись с step_id со значением 1 («Оплата») в столбец date_step_beg заносится  дата выставления счета по заказу ). После того, как счет оплачен, в столбец date_step_end той же записи заносится дата оплаты заказа.\nЗатем в таблице  buy_step заполняется  step_id со значением 2 («Упаковка»)  для текущего заказа: после передачи заказа на упаковку заполняется поле date_step_beg, а после окончания упаковки – поле date_step_end. И так далее для оставшихся двух шагов («Транспортировка» и «Доставка»).\nДля реализации запроса учитывать тот факт, что те заказы, которые не оплачены в таблице buy_step в записи с step_id со значением 1 («Оплата»)  в столбце date_step_end  имеют значение Null.\n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nсравнение с пустым значением;\nусловие отбора (шаг, шаг);\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) :\n\nВывести номера всех оплаченных заказов и даты, когда они были оплачены.\n\nРезультат\n+--------+---------------+\n| buy_id | date_step_end |\n+--------+---------------+\n| 1      | 2020-02-20    |\n| 2      | 2020-02-28    |\n| 3      | 2020-03-05    |\n+--------+---------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1111922,
                "text": {
                    "text": "Задание\nВывести информацию о каждом заказе: его номер, кто его сформировал (фамилия пользователя) и его стоимость (сумма произведений количества заказанных книг и их цены), в отсортированном по номеру заказа виде. Последний столбец назвать Стоимость.\nФрагмент логической схемы базы данных:\n​\nСвязанные шаги\n\nвыборка столбцов и их именование;\nгрупповые функции(шаг, шаг);\nсоединение таблиц;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) :\n\nВывести информацию о каждом заказе: его номер, кто его сформировал (фамилия пользователя) и его стоимость (сумма произведений количества заказанных книг и их цены), в отсортированном по номеру заказа виде. Последний столбец назвать Стоимость.\n\nРезультат\n+--------+----------------+-----------+\n| buy_id | name_client    | Стоимость |\n+--------+----------------+-----------+\n| 1      | Баранов Павел  | 2271.39   |\n| 2      | Семенонов Иван | 1037.98   |\n| 3      | Абрамова Катя  | 2131.49   |\n| 4      | Баранов Павел  | 480.50    |\n+--------+----------------+-----------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1114201,
                "text": {
                    "text": "Задание\nВывести номера заказов (buy_id) и названия этапов,  на которых они в данный момент находятся. Если заказ доставлен –  информацию о нем не выводить. Информацию отсортировать по возрастанию buy_id.\nПояснение\n Текущим  считается тот этап, для которого заполнена дата начала этапа и не заполнена дата его окончания.\n\nФрагмент логической схемы базы данных:\n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nусловие отбора;\nсравнение с пустым значением;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) :\n\nВывести номера заказов (buy_id) и названия этапов, на которых они в данный момент находятся. Если заказ доставлен –  информацию о нем не выводить. Информацию отсортировать по возрастанию buy_id.\n\nРезультат\n+--------+-----------------+\n| buy_id | name_step       |\n+--------+-----------------+\n| 2      | Транспортировка |\n| 3      | Доставка        |\n| 4      | Оплата          |\n+--------+-----------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1117517,
                "text": {
                    "text": "Задание\nВ таблице city для каждого города указано количество дней, за которые заказ может быть доставлен в этот город (рассматривается только этап Транспортировка). Для тех заказов, которые прошли этап транспортировки, вывести количество дней за которое заказ реально доставлен в город. А также, если заказ доставлен с опозданием, указать количество дней задержки, в противном случае вывести 0. В результат включить номер заказа (buy_id), а также вычисляемые столбцы Количество_дней и Опоздание. Информацию вывести в отсортированном по номеру заказа виде.\nФрагмент логической схемы базы данных:\n\nПояснение\n\nДля вычисления поля «Опоздание» используйте функцию if(), а для вычисления разности дат – функцию DATEDIFF().\nЕсли доставка еще не осуществлена, то поле date_step_end  для этапа Транспортировка - пусто.\n\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nвычитание дат;\nфункция IF();\nусловие отбора (шаг, шаг);\nсравнение с пустым значением;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) :\n\nВ таблице city для каждого города указано количество дней, за которые заказ может быть доставлен в этот город (рассматривается только этап \"Транспортировка\"). Для тех заказов, которые прошли этап транспортировки, вывести количество дней за которое заказ реально доставлен в город. А также, если заказ доставлен с опозданием, указать количество дней задержки, в противном случае вывести 0. В результат включить номер заказа (buy_id), а также вычисляемые столбцы Количество_дней и Опоздание. Информацию вывести в отсортированном по номеру заказа виде.\n\nРезультат\n+--------+-----------------+-----------+\n| buy_id | Количество_дней | Опоздание |\n+--------+-----------------+-----------+\n| 1      | 14              | 2         |\n| 3      | 4               | 0         |\n+--------+-----------------+-----------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1112421,
                "text": {
                    "text": "Задание\nВыбрать всех клиентов, которые заказывали книги Достоевского, информацию вывести в отсортированном по алфавиту виде. В решении используйте фамилию автора, а не его id.\nФрагмент логической схемы:\n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nусловие отбора (шаг, шаг);\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nВыбрать всех клиентов, которые заказывали книги Достоевского, информацию вывести в отсортированном по алфавиту виде. В решении используйте фамилию автора, а не его id.\n\nРезультат\n+---------------+\n| name_client   |\n+---------------+\n| Абрамова Катя |\n| Баранов Павел |\n+---------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1111735,
                "text": {
                    "text": "Задание\nВывести жанр (или жанры), в котором было заказано больше всего экземпляров книг, указать это количество. Последний столбец назвать Количество.\nФрагмент логической схемы:\n\nПояснение\nИспользовать вложенный запрос для вычисления максимального значения экземпляров книг.  Рекомендуется запрос реализовывать по шагам.\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nгрупповые функции(шаг, шаг);\nгрупповые вычисления по всей таблице;\nвложенные запросы в условии отбора;\nвложенные запросы в операторах соединения.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nВывести жанр (или жанры), в котором было заказано больше всего экземпляров книг, указать это количество . Последний столбец назвать Количество.\n\nРезультат\n+------------+------------+\n| name_genre | Количество |\n+------------+------------+\n| Роман      | 7          |\n+------------+------------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1505226,
                "text": {
                    "text": "Задание\n\nЭтот шаг добавлен по рекомендациям пользователей: Тимур Timmmyyy, Todor Illia, Лёха Last name, Игорь Владимирович Лапшин и др.\n\nСравнить ежемесячную выручку от продажи книг за текущий и предыдущий годы. Для этого вывести год, месяц, сумму выручки в отсортированном сначала по возрастанию месяцев, затем по возрастанию лет виде. Название столбцов: Год, Месяц, Сумма.\nФрагмент логической схемы базы данных (в запросе НЕ ОБЯЗАТЕЛЬНО использовать все таблицы):\n\nИнформация о продажах предыдущего года хранится в архивной таблице buy_archive, которая создается в конце года на основе информации из таблиц базы данных и имеет следующую структуру:\n\n[TABLE]\n\nВажно! Условно считаем, что 2020 - текущий год, а 2019 - предыдущий год.\nОператор UNION\nОператор UNION используется для объединения двух и более SQL запросов, его синтаксис:\nSELECT столбец_1_1, столбец_1_2, ...\nFROM \n  ...\nUNION\nSELECT столбец_2_1, столбец_2_2, ...\nFROM \n  ...\nили\nSELECT столбец_1_1, столбец_1_2, ...\nFROM \n  ...\nUNION ALL\nSELECT столбец_2_1, столбец_2_2, ...\nFROM \n  ...\nВажно отметить, что каждый из SELECT должен иметь в своем запросе одинаковое количество столбцов и  совместимые типы возвращаемых данных. Каждый запрос может включать разделы WHERE, GROUP BY и пр.\nВ результате выполнения этой конструкции будет выведена таблица, имена столбцов которой соответствуют именам столбцов в первом запросе. А в таблице результата сначала отображаются записи-результаты первого запроса, а затем второго. Если указано ключевое слово ALL, то в результат включаются все записи запросов, в противном случае - различные.\nПример\nВывести всех клиентов, которые делали заказы или в этом, или в предыдущем году.\nНа этом примере рассмотрим разницу между UNION и UNION ALL.\nС UNION клиенты будут выведены без повторений:\nSELECT name_client\nFROM \n    buy_archive\n    INNER JOIN client USING(client_id)\nUNION\nSELECT name_client\nFROM \n    buy \n    INNER JOIN client USING(client_id)\n+-----------------+\n| name_client     |\n+-----------------+\n| Баранов Павел   |\n| Абрамова Катя   |\n| Яковлева Галина |\n| Семенонов Иван  |\n+-----------------+\nAffected rows: 4\nC UNION ALL будут выведены клиенты с повторением (для тех, кто заказывал книги в обоих годах, а также несколько раз в одном году)\nSELECT name_client\nFROM \n    buy_archive\n    INNER JOIN client USING(client_id)\nUNION ALL\nSELECT name_client\nFROM \n    buy \n    INNER JOIN client USING(client_id)\n+-----------------+\n| name_client     |\n+-----------------+\n| Баранов Павел   |\n| Баранов Павел   |\n| Абрамова Катя   |\n| Абрамова Катя   |\n| Абрамова Катя   |\n| Яковлева Галина |\n| Яковлева Галина |\n| Баранов Павел   |\n| Абрамова Катя   |\n| Абрамова Катя   |\n| Баранов Павел   |\n| Баранов Павел   |\n| Абрамова Катя   |\n| Семенонов Иван  |\n+-----------------+\nAffected rows: 14\nПример\nВывести информацию об оплаченных заказах за предыдущий и текущий год, информацию отсортировать по  client_id.\nЗапрос:\nSELECT buy_id, client_id, book_id, date_payment, amount, price\nFROM \n    buy_archive\nUNION ALL\nSELECT buy.buy_id, client_id, book_id, date_step_end, buy_book.amount, price\nFROM \n    book \n    INNER JOIN buy_book USING(book_id)\n    INNER JOIN buy USING(buy_id) \n    INNER JOIN buy_step USING(buy_id)\n    INNER JOIN step USING(step_id)                  \nWHERE  date_step_end IS NOT Null and name_step = \"Оплата\"  \n\nРезультат:\n+--------+-----------+---------+--------------+--------+--------+\n| buy_id | client_id | book_id | date_payment | amount | price  |\n+--------+-----------+---------+--------------+--------+--------+\n| 2      | 1         | 1       | 2019-02-21   | 2      | 670.60 |\n| 2      | 1         | 3       | 2019-02-21   | 1      | 450.90 |\n| 1      | 2         | 2       | 2019-02-10   | 2      | 520.30 |\n| 1      | 2         | 4       | 2019-02-10   | 3      | 780.90 |\n| 1      | 2         | 3       | 2019-02-10   | 1      | 450.90 |\n| 3      | 4         | 4       | 2019-03-05   | 4      | 780.90 |\n| 3      | 4         | 5       | 2019-03-05   | 2      | 480.90 |\n| 4      | 1         | 6       | 2019-03-12   | 1      | 650.00 |\n| 5      | 2         | 1       | 2019-03-18   | 2      | 670.60 |\n| 5      | 2         | 4       | 2019-03-18   | 1      | 780.90 |\n| 1      | 1         | 3       | 2020-02-20   | 1      | 460.00 |\n| 1      | 1         | 7       | 2020-02-20   | 2      | 570.20 |\n| 1      | 1         | 1       | 2020-02-20   | 1      | 670.99 |\n| 2      | 3         | 8       | 2020-02-28   | 2      | 518.99 |\n| 3      | 2         | 1       | 2020-03-05   | 1      | 670.99 |\n| 3      | 2         | 2       | 2020-03-05   | 1      | 540.50 |\n| 3      | 2         | 3       | 2020-03-05   | 2      | 460.00 |\n+--------+-----------+---------+--------------+--------+--------+\n\nВ результат включены сначала записи архивной таблицы, а затем информация об оплаченных заказах  текущего года. Для того, чтобы изменить порядок следования записей в объединенном запросе, можно использовать сортировку по всем объединенным записям. В этом случае ключевые слова ORDER BY указываются после последнего запроса: \nSELECT buy_id, client_id, book_id, date_payment, amount, price\nFROM \n    buy_archive\nUNION ALL\nSELECT buy.buy_id, client_id, book_id, date_step_end, buy_book.amount, price\nFROM \n    book \n    INNER JOIN buy_book USING(book_id)\n    INNER JOIN buy USING(buy_id) \n    INNER JOIN buy_step USING(buy_id)\n    INNER JOIN step USING(step_id)                  \nWHERE  date_step_end IS NOT Null and name_step = \"Оплата\"\nORDER BY client_id\nРезультат:\n+--------+-----------+---------+--------------+--------+--------+\n| buy_id | client_id | book_id | date_payment | amount | price  |\n+--------+-----------+---------+--------------+--------+--------+\n| 2      | 1         | 3       | 2019-02-21   | 1      | 450.90 |\n| 2      | 1         | 1       | 2019-02-21   | 2      | 670.60 |\n| 1      | 1         | 3       | 2020-02-20   | 1      | 460.00 |\n| 1      | 1         | 7       | 2020-02-20   | 2      | 570.20 |\n| 4      | 1         | 6       | 2019-03-12   | 1      | 650.00 |\n| 1      | 1         | 1       | 2020-02-20   | 1      | 670.99 |\n| 3      | 2         | 1       | 2020-03-05   | 1      | 670.99 |\n| 3      | 2         | 2       | 2020-03-05   | 1      | 540.50 |\n| 3      | 2         | 3       | 2020-03-05   | 2      | 460.00 |\n| 5      | 2         | 4       | 2019-03-18   | 1      | 780.90 |\n| 5      | 2         | 1       | 2019-03-18   | 2      | 670.60 |\n| 1      | 2         | 3       | 2019-02-10   | 1      | 450.90 |\n| 1      | 2         | 4       | 2019-02-10   | 3      | 780.90 |\n| 1      | 2         | 2       | 2019-02-10   | 2      | 520.30 |\n| 2      | 3         | 8       | 2020-02-28   | 2      | 518.99 |\n| 3      | 4         | 5       | 2019-03-05   | 2      | 480.90 |\n| 3      | 4         | 4       | 2019-03-05   | 4      | 780.90 |\n+--------+-----------+---------+--------------+--------+--------+\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nвыделение номера месяца из даты;\nвыделение части даты;\nгрупповые функции(шаг, шаг);\nусловие отбора (шаг, шаг);\nсравнение с пустым значением;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nСравнить ежемесячную выручку от продажи книг за текущий и предыдущий годы. Для этого вывести год, месяц, сумму выручки в отсортированном сначала по возрастанию месяцев, затем по возрастанию лет виде. Название столбцов: Год, Месяц, Сумма.\n\nПояснение\n\nЕжемесячная выручка рассчитывается как  сумма произведений цены книги на заказанное пользователем в этом месяце количество. \nЦена книги для текущего года хранится в таблице book, а для предыдущего в buy_archive.\nФункция для выделения месяца рассмотрена на этом шаге.\n\n\nРезультат\n+------+----------+---------+\n| Год  | Месяц    | Сумма   |\n+------+----------+---------+\n| 2019 | February | 5626.30 |\n| 2020 | February | 3309.37 |\n| 2019 | March    | 6857.50 |\n| 2020 | March    | 2131.49 |\n+------+----------+---------+\n\nНаполнение таблиц ",
                    "tables": [
                        "{\"0\":{\"0\":\"Название столбца\",\"1\":\"buy_archive_id\",\"2\":\"buy_id\",\"3\":\"client_id\",\"4\":\"book_id\",\"5\":\"date_payment\",\"6\":\"price\",\"7\":\"amount\"},\"1\":{\"0\":\"Описание\",\"1\":\"ключевой столбец\",\"2\":\"idзаказов, выбирается из таблицы buy\",\"3\":\"idклиентов, выбирается из из таблицы client\",\"4\":\"idкниги, выбирается из таблицы book\",\"5\":\"дата оплаты заказа, выбирается из столбца date_step_end  таблицы buy_step этапа «Оплата» соответствующего заказа\",\"6\":\"цена книги в текущем заказе из таблицы book  (хранится, так как цена может измениться )\",\"7\":\"количество купленных книг в текущем заказе, из таблицы buy_book\"}}"
                    ]
                }
            },
            {
                "id_step": 1506984,
                "text": {
                    "text": "Задание\nДля каждой отдельной книги необходимо вывести информацию о количестве проданных экземпляров и их стоимости за 2020 и 2019 год . За 2020 год проданными считать те экземпляры, которые уже оплачены. Вычисляемые столбцы назвать Количество и Сумма. Информацию отсортировать по убыванию стоимости.\nФрагмент логической схемы базы данных:\n\nИнформация о продажах за 2020 год содержится в таблицах базы данных (считаем, что 2020 - текущий год). Информация о продажах 2019 года (то есть условно прошлого года) хранится в таблице buy_archive следующей структуры:\n\nПояснение\nЗапросы с UNION можно использовать как вложенные, это позволяет обрабатывать данные из объединенных запросов совместно.\nПример\nВывести клиентов, которые делали покупки в прошлом году, но не делали в этом. А также новых клиентов, которые делали заказы только в текущем году. Информацию отсортировать по возрастанию лет.\nШаг 1. Отберем клиентов прошлого года, указав дату самого раннего заказа, а также клиентов этого года, указав для них самую раннюю дату оплаты заказа.\nЗапрос\nSELECT name_client, MIN(date_payment) AS first_payment\nFROM \n    buy_archive \n    INNER JOIN client USING(client_id)\nGROUP BY  name_client\nUNION\nSELECT name_client, MIN(date_step_end)\nFROM \n    buy \n    INNER JOIN client USING(client_id)\n    INNER JOIN buy_step USING(buy_id)\nGROUP BY name_client\nРезультат:\n+-----------------+---------------+\n| name_client     | first_payment |\n+-----------------+---------------+\n| Абрамова Катя   | 2019-02-10    |\n| Баранов Павел   | 2019-02-21    |\n| Яковлева Галина | 2019-03-05    |\n| Абрамова Катя   | 2020-03-05    |\n| Баранов Павел   | 2020-02-20    |\n| Семенонов Иван  | 2020-02-28    |\n+-----------------+---------------+\nКак видно из таблицы, некоторые клиенты делали покупки как в прошлом, так и в этом году. Они встречаются в таблице 2 раза.\nШаг 2. Оставим только тех клиентов, которые встречаются в полученной таблице один раз, для этого используем предыдущий запрос как вложенный.\nЗапрос:\nSELECT name_client, MIN(YEAR(first_payment)) AS Год\nFROM\n  (\n   SELECT name_client, MIN(date_payment) AS first_payment\n   FROM \n       buy_archive \n       INNER JOIN client USING(client_id)\n   GROUP BY  name_client\n   UNION\n   SELECT name_client, MIN(date_step_end)\n   FROM \n       buy \n       INNER JOIN client USING(client_id)\n       INNER JOIN buy_step USING (buy_id)\n   GROUP BY name_client\n  ) query_in\nGROUP BY name_client\nHAVING COUNT(*) = 1\nORDER BY 2\nРезультат:\n+-----------------+------+\n| name_client     | Год  |\n+-----------------+------+\n| Яковлева Галина | 2019 |\n| Семенонов Иван  | 2020 |\n+-----------------+------+\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nгрупповые функции;\nвложенные запросы в операторах соединения;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nДля каждой отдельной книги необходимо вывести информацию о количестве проданных экземпляров и их стоимости за 2020 и 2019 год . За 2020 год проданными считать те экземпляры, которые уже оплачены. Вычисляемые столбцы назвать Количество и Сумма. Информацию отсортировать по убыванию стоимости.\n\nПояснение\nПри вычислении Количества и Суммы для текущего года учитывать только те книги, которые уже оплачены (указана дата оплаты для шага \"Оплата\" в таблице buy_step).\n\nРезультат\n+-----------------------+------------+---------+\n| title                 | Количество | Сумма   |\n+-----------------------+------------+---------+\n| Братья Карамазовы     | 8          | 6247.20 |\n| Мастер и Маргарита    | 6          | 4024.38 |\n| Идиот                 | 5          | 2281.80 |\n| Белая гвардия         | 3          | 1581.10 |\n| Черный человек        | 2          | 1140.40 |\n| Лирика                | 2          | 1037.98 |\n| Игрок                 | 2          | 961.80  |\n| Стихотворения и поэмы | 1          | 650.00  |\n+-----------------------+------------+---------+\n\nНаполнение таблиц ",
                    "tables": []
                }
            },
            {
                "id_step": 1132035,
                "text": {
                    "text": "Задание\nПридумайте один или несколько запросов на выборку для предметной области «Интернет-магазин книг» (в таблицы занесены данные, как на первом шаге урока). Проверьте, правильно ли они работают.\nПри желании можно формулировку запросов  разместить в комментариях. \nРазмещенные задания можно использовать для закрепления материала урока.\nОценивайте понравившиеся Вам запросы.\nВ последнем модуле создан отдельный урок, в котором мы разместим запросы, набравшие наибольшее количество лайков.\nЛогическая схема базы данных:\n \nНаполнение таблиц ",
                    "tables": []
                }
            }
        ]
    }
]