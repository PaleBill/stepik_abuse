[
    {
        "id_lesson": 291012,
        "steps": [
            {
                "id_step": 1090381,
                "text": {
                    "text": "Содержание урока\nВ запросах SQL могут участвовать несколько таблиц базы данных. При этом необходимо указать как эти таблицы соединены между собой. \nОперация соединения JOIN предназначена для обеспечения выборки данных из двух таблиц и включения этих данных в один результирующий набор. При необходимости соединения не двух, а нескольких таблиц, операция соединения применяется несколько раз (последовательно).\nОператоры соединения входят в раздел FROM SQL запросов.\nВ данном уроке будут созданы запросы:\n\nдля двух таблиц, внутреннее соединение INNER JOIN;\nдля двух таблиц, внешние соединения LEFT JOIN и RIGHT JOIN;\nдля двух таблиц, перекрестное соединение CROSS JOIN;\nвыборки данных из нескольких таблиц;\nвыборки данных из нескольких таблиц с группировкой;\nвыборки данных с применением вложенных запросов;\nвложенные запросы в операторах соединения,\nоператоры соединения, использование USING.\n\nСтруктура и наполнение таблиц\nКонцептуальная схема базы данных:\n\n \n \n \n \nЛогическая схема базы данных:\n\n \n \n \n \n \n \n \n \nТаблица author(создание, заполнение):\n\n[TABLE]\n\nТаблица genre(создание, заполнение, рассмотрено в качестве примеров):\n\n[TABLE]\n\nТаблица book (создание, заполнение):\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\"},\"1\":{\"0\":\"name_author\",\"1\":\"Булгаков М.А.\",\"2\":\"Достоевский Ф.М.\",\"3\":\"Есенин С.А.\",\"4\":\"Пастернак Б.Л.\",\"5\":\"Лермонтов М.Ю.\"}}",
                        "{\"0\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_genre\",\"1\":\"Роман\",\"2\":\"Поэзия\",\"3\":\"Приключения\"}}",
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"6\",\"7\":\"7\",\"8\":\"8\"},\"1\":{\"0\":\"title\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Игрок\",\"6\":\"Стихотворения и поэмы\",\"7\":\"Черный человек\",\"8\":\"Лирика\"},\"2\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"3\",\"7\":\"3\",\"8\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\"},\"4\":{\"0\":\"price\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"480.50\",\"6\":\"650.00\",\"7\":\"570.20\",\"8\":\"518.99\"},\"5\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"3\",\"5\":\"10\",\"6\":\"15\",\"7\":\"6\",\"8\":\"2\"}}"
                    ]
                }
            },
            {
                "id_step": 1094279,
                "text": {
                    "text": "Соединение INNER JOIN\nОператор внутреннего соединения INNER JOIN соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным.\nSELECT\n ...\nFROM\n    таблица_1 INNER JOIN  таблица_2\n    ON условие\n...\nРезультат запроса формируется так:\n\nкаждая строка одной таблицы сопоставляется с каждой строкой второй таблицы;\nдля полученной «соединённой» строки проверяется условие соединения;\nесли условие истинно, в таблицу результата добавляется соответствующая «соединённая» строка;\n\nПример\nВывести название книг и их авторов.\nЗапрос:\nSELECT title, name_author\nFROM \n    author INNER JOIN book\n    ON author.author_id = book.author_id;\nПоскольку поля author_id в таблицах book и author называются одинаково, необходимо в запросах указывать полную ссылку на них (book.author_id и author.author_id).\nРезультат:\n+-----------------------+------------------+\n| title                 | name_author      |\n+-----------------------+------------------+\n| Мастер и Маргарита    | Булгаков М.А.    |\n| Белая гвардия         | Булгаков М.А.    |\n| Идиот                 | Достоевский Ф.М. |\n| Братья Карамазовы     | Достоевский Ф.М. |\n| Игрок                 | Достоевский Ф.М. |\n| Стихотворения и поэмы | Есенин С.А.      |\n| Черный человек        | Есенин С.А.      |\n| Лирика                | Пастернак Б.Л.   |\n+-----------------------+------------------+\nВ данном запросе осуществляется соединение главной таблицы author и зависимой таблицы book по ключевому столбцу author.author_id и внешнему ключу book.author_id. При этом в результирующую таблицу запроса включаются все строки, в которых значения этих столбцов совпадают. Другими словами строки зависимой таблицы book дополняются фамилией и инициалами авторов из таблицы author.\nЗадание\nВывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.\nЛогическая схема базы данных:\n\nТекст задания (чтобы не прокручивать страницу):\n\nВывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.\n\nРезультат\n+-----------------------+------------+--------+\n| title                 | name_genre | price  |\n+-----------------------+------------+--------+\n| Стихотворения и поэмы | Поэзия     | 650.00 |\n| Игрок                 | Роман      | 480.50 |\n| Идиот                 | Роман      | 460.00 |\n+-----------------------+------------+--------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1094355,
                "text": {
                    "text": "Внешнее соединение LEFT и RIGHT OUTER JOIN\nОператор внешнего соединения LEFT OUTER JOIN  (можно использовать LEFT JOIN) соединяет две таблицы. Порядок таблиц для оператора важен, поскольку оператор не является симметричным.\nSELECT\n ...\nFROM\n    таблица_1 LEFT JOIN  таблица_2\n    ON условие\n...\nРезультат запроса формируется так:\n\nв результат включается внутреннее соединение (INNER JOIN) первой и второй таблицы в соответствии с условием;\nзатем в результат добавляются те записи первой таблицы, которые не вошли во внутреннее соединение на шаге 1, для таких записей соответствующие поля второй таблицы заполняются значениями NULL.\n\nСоединение RIGHT JOIN действует аналогично, только в пункте 2 первая таблица меняется на вторую и наоборот.\nПример\nВывести название всех книг каждого автора, если книг некоторых авторов в данный момент нет на складе – вместо названия книги указать Null.\nЗапрос:\nSELECT name_author, title \nFROM author LEFT JOIN book\n     ON author.author_id = book.author_id\nORDER BY name_author;     \nРезультат:\n+------------------+-----------------------+\n| name_author      | title                 |\n+------------------+-----------------------+\n| Булгаков М.А.    | Мастер и Маргарита    |\n| Булгаков М.А.    | Белая гвардия         |\n| Достоевский Ф.М. | Игрок                 |\n| Достоевский Ф.М. | Идиот                 |\n| Достоевский Ф.М. | Братья Карамазовы     |\n| Есенин С.А.      | Стихотворения и поэмы |\n| Есенин С.А.      | Черный человек        |\n| Лермонтов М.Ю.   | NULL                  |\n| Пастернак Б.Л.   | Лирика                |\n+------------------+-----------------------+\nТак как в таблице book нет книг Лермонтова, напротив этой фамилии стоит Null.\nЗадание\nВывести все жанры, которые не представлены в книгах на складе.\nЛогическая схема базы данных:\n\nПояснение\n\nПри использовании внешнего соединения названия книг и другие столбцы таблицы book для жанра тех книг, которого нет на складе, будут содержать значение Null.\nДля сравнения с пустым значением используется запись IS Null (написать = Null нельзя).\n\n\nТекст задания (чтобы не прокручивать страницу):\n\nВывести все жанры, которые не представлены в книгах на складе.\n\nРезультат\n+-------------+\n| name_genre  |\n+-------------+\n| Приключения |\n+-------------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1094394,
                "text": {
                    "text": "Перекрестное соединение CROSS JOIN\nОператор перекрёстного соединения, или декартова произведения CROSS JOIN (в запросе вместо ключевых слов можно поставить запятую между таблицами) соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным. Его структура:\nSELECT\n ...\nFROM\n    таблица_1 CROSS JOIN  таблица_2\n...\nили\nSELECT\n ...\nFROM\n    таблица_1, таблица_2\n...\nРезультат запроса формируется так: каждая строка одной таблицы соединяется с каждой строкой другой таблицы, формируя  в результате все возможные сочетания строк двух таблиц.\nНапример, запрос:\nSELECT name_author, name_genre\nFROM \n    author, genre;\nкаждому автору из таблицы author поставит в соответствие все возможные жанры из таблицы genre:\n+------------------+-------------+\n| name_author      | name_genre  |\n+------------------+-------------+\n| Булгаков М.А.    | Роман       |\n| Булгаков М.А.    | Поэзия      |\n| Булгаков М.А.    | Приключения |\n| Достоевский Ф.М. | Роман       |\n| Достоевский Ф.М. | Поэзия      |\n| Достоевский Ф.М. | Приключения |\n| Есенин С.А.      | Роман       |\n| Есенин С.А.      | Поэзия      |\n| Есенин С.А.      | Приключения |\n| Пастернак Б.Л.   | Роман       |\n| Пастернак Б.Л.   | Поэзия      |\n| Пастернак Б.Л.   | Приключения |\n| Лермонтов М.Ю.   | Роман       |\n| Лермонтов М.Ю.   | Поэзия      |\n| Лермонтов М.Ю.   | Приключения |\n+------------------+-------------+\nЗадание\nЕсть список городов, хранящийся в таблице city:\n\n[TABLE]\n\nНеобходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.\nСтруктура таблицы:\n\nПояснение\n1. Для генерации случайной даты можно к первому числу года ('2020-01-01') прибавить целое случайное число в интервале от 0 до 365.\nГенерации случайных чисел в интервале от 0 до 1 (не включительно) осуществляется с помощью функции RAND(). Если эту функцию умножить на 365, то она будет генерировать вещественные числа от 0 до 365 (не включительно). Осталось только отбросить дробную часть. Это можно сделать с помощью функции FLOOR(), которая возвращает наибольшее целое число, меньшее или равное указанному числовому значению. Таким образом, случайное число от 0 до 365 можно получить с помощью выражения:\nFLOOR(RAND() * 365)\nВажно! Даты должны быть за 2020 год, первое число года - 1 января 2020 года.\n2. Для сложения  даты с числом используется функция:\nDATE_ADD(дата, INTERVAL число единица_измерения),\n\nгде\n  единица_измерения (использовать прописные буквы) – это день (DAY), месяц(MONTH), неделя(WEEK) и пр., \n  число – целое число,\n  дата – значение даты или даты и времени.\nФункция к дате  прибавляет указанное число, выраженное в днях, месяцах и пр. , в зависимости от заданного интервала, и возвращает новую дату.\nНапример:\nDATE_ADD('2020-02-02', INTERVAL 45 DAY) возвращает 18 марта 2020 года\nDATE_ADD('2020-02-02', INTERVAL 6 MONTH) возвращает 2 августа 2020 года\n\nТекст задания (чтобы не прокручивать страницу):\n\n Есть список городов, хранящийся в таблице city:\n\n[TABLE]\n\nНеобходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.\n\nРезультат\nПримечание: даты при каждом запуске получаются разными, и не должны совпадать с приведенными значениями.\n+-----------------+------------------+------------+\n| name_city       | name_author      | Дата       |\n+-----------------+------------------+------------+\n| Владивосток     | Достоевский Ф.М. | 2020-12-04 |\n| Владивосток     | Лермонтов М.Ю.   | 2020-10-21 |\n| Владивосток     | Пастернак Б.Л.   | 2020-08-23 |\n| Владивосток     | Есенин С.А.      | 2020-08-14 |\n| Владивосток     | Булгаков М.А.    | 2020-01-08 |\n| Москва          | Лермонтов М.Ю.   | 2020-09-30 |\n| Москва          | Достоевский Ф.М. | 2020-07-21 |\n| Москва          | Есенин С.А.      | 2020-06-23 |\n| Москва          | Булгаков М.А.    | 2020-05-28 |\n| Москва          | Пастернак Б.Л.   | 2020-04-08 |\n| Санкт-Петербург | Булгаков М.А.    | 2020-11-05 |\n| Санкт-Петербург | Лермонтов М.Ю.   | 2020-10-22 |\n| Санкт-Петербург | Достоевский Ф.М. | 2020-09-19 |\n| Санкт-Петербург | Есенин С.А.      | 2020-08-11 |\n| Санкт-Петербург | Пастернак Б.Л.   | 2020-06-28 |\n+-----------------+------------------+------------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица city:\n+---------+-----------------+\n| city_id | name_city       |\n+---------+-----------------+\n| 1       | Москва          |\n| 2       | Санкт-Петербург |\n| 3       | Владивосток     |\n+---------+-----------------+\n",
                    "tables": [
                        "{\"0\":{\"0\":\"city_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_city\",\"1\":\"Москва\",\"2\":\"Санкт-Петербург\",\"3\":\"Владивосток\"}}",
                        "{\"0\":{\"0\":\"city_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_city\",\"1\":\"Москва\",\"2\":\"Санкт-Петербург\",\"3\":\"Владивосток\"}}"
                    ]
                }
            },
            {
                "id_step": 1094595,
                "text": {
                    "text": "Запросы на выборку из нескольких таблиц\nЗапрос на выборку может выбирать данные из двух и более таблиц базы данных. При этом таблицы должны быть логически связаны между собой. Для каждой пары таблиц, включаемых в запрос, необходимо указать свой оператор соединения. Наиболее распространенным является внутреннее соединение INNER JOIN, поэтому в примерах будем использовать его.\nПусть таблицы связаны между собой следующим образом:\n\nтогда запрос на выборку для этих таблиц будет иметь вид:\nSELECT\n ...\nFROM\n    first \n    INNER JOIN  second ON first.first_id = second.first_id\n    INNER JOIN  third  ON second.second_id = third.second_id\n...\nЕсли же таблицы связаны так:\n\nто запрос на выборку выглядит следующим образом:\nSELECT\n ...\nFROM\n    first \n    INNER JOIN  third ON first.first_id = third.first_id\n    INNER JOIN second ON third.second_id = second.second_id \n...\nВ этом случае рекомендуется соединение таблиц записывать последовательно, «по кругу»: first → third → second.\nПример\nВывести информацию о тех книгах, их авторах и жанрах, цена которых принадлежит интервалу от 500  до 700 рублей  включительно.\nЗапрос:\nSELECT title, name_author, name_genre, price, amount\nFROM\n    author \n    INNER JOIN  book ON author.author_id = book.author_id\n    INNER JOIN genre ON genre.genre_id = book.genre_id\nWHERE price BETWEEN 500 AND 700;\nРезультат:\n+-----------------------+----------------+------------+--------+--------+\n| title                 | name_author    | name_genre | price  | amount |\n+-----------------------+----------------+------------+--------+--------+\n| Мастер и Маргарита    | Булгаков М.А.  | Роман      | 670.99 | 3      |\n| Белая гвардия         | Булгаков М.А.  | Роман      | 540.50 | 5      |\n| Стихотворения и поэмы | Есенин С.А.    | Поэзия     | 650.00 | 15     |\n| Черный человек        | Есенин С.А.    | Поэзия     | 570.20 | 6      |\n| Лирика                | Пастернак Б.Л. | Поэзия     | 518.99 | 2      |\n+-----------------------+----------------+------------+--------+--------+\nЗадание\n Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.\nЛогическая схема базы данных:\n\nТекст задания (чтобы не прокручивать страницу):\n\n Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.\n\nРезультат\n+------------+--------------------+------------------+\n| name_genre | title              | name_author      |\n+------------+--------------------+------------------+\n| Роман      | Белая гвардия      | Булгаков М.А.    |\n| Роман      | Братья Карамазовы  | Достоевский Ф.М. |\n| Роман      | Игрок              | Достоевский Ф.М. |\n| Роман      | Идиот              | Достоевский Ф.М. |\n| Роман      | Мастер и Маргарита | Булгаков М.А.    |\n+------------+--------------------+------------------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1095846,
                "text": {
                    "text": "Запросы для нескольких таблиц с группировкой\nВ запросах с групповыми функциями могут использоваться несколько таблиц, между которыми используются различные типы соединений.\nПример\nВывести количество различных книг каждого автора. Информацию отсортировать в алфавитном порядке по фамилиям  авторов.\nЗапрос:\nSELECT name_author, count(title) AS Количество\nFROM \n    author INNER JOIN book\n    on author.author_id = book.author_id\nGROUP BY name_author\nORDER BY name_author;    \nРезультат\n+------------------+------------+\n| name_author      | Количество |\n+------------------+------------+\n| Булгаков М.А.    | 2          |\n| Достоевский Ф.М. | 3          |\n| Есенин С.А.      | 2          |\n| Пастернак Б.Л.   | 1          |\n+------------------+------------+\nПри использовании соединения INNER JOIN мы не можем узнать, что книг Лермонтова на складе нет, но предполагается, что они могут быть.  Чтобы автор Лермонтов был включен в результат, нужно изменить соединение таблиц.\nЗапрос:\nSELECT name_author, count(title) AS Количество\nFROM \n    author LEFT JOIN book\n    on author.author_id = book.author_id\nGROUP BY name_author\nORDER BY name_author;   \nРезультат:\n+------------------+------------+\n| name_author      | Количество |\n+------------------+------------+\n| Булгаков М.А.    | 2          |\n| Достоевский Ф.М. | 3          |\n| Есенин С.А.      | 2          |\n| Лермонтов М.Ю.   | 0          |\n| Пастернак Б.Л.   | 1          |\n+------------------+------------+\nЗадание\nПосчитать количество экземпляров  книг каждого автора из таблицы author.  Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.\nЛогическая схема базы данных:\n\nПояснение\nЧтобы в результат были включены авторы, книг которых на складе нет, необходимо в условии отбора, кроме того, что общее количество книг каждого автора меньше 10, учесть, что у автора вообще может не быть книг (то есть COUNT(title) = 0).\n\nТекст задания (чтобы не прокручивать страницу):\n\nПосчитать количество экземпляров  книг каждого автора из таблицы author.  Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.\n\nРезультат\n+----------------+------------+\n| name_author    | Количество |\n+----------------+------------+\n| Лермонтов М.Ю. | NULL       |\n| Пастернак Б.Л. | 2          |\n| Булгаков М.А.  | 8          |\n+----------------+------------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1095869,
                "text": {
                    "text": "Запросы для нескольких таблиц со вложенными запросами\nВ запросах, построенных на нескольких таблицах, можно использовать вложенные запросы. Вложенный запрос может быть включен:  после ключевого слова SELECT,  после FROM и в условие отбора после WHERE (HAVING).\nПример\nВывести авторов, общее количество книг которых на складе максимально.\nЭто достаточно сложный запрос, поэтому будем решать его по шагам (реализуя каждый запрос по отдельности), а потом объединим все запросы в один.\nШаг 1. Найдем суммарное количество книг на складе по каждому автору. Поскольку фамилии автора в этой таблице нет, то группировку будем осуществлять по author_id.\nЗапрос:\nSELECT author_id, SUM(amount) AS sum_amount FROM book GROUP BY author_id\nРезультат:\n+-----------+------------+\n| author_id | sum_amount |\n+-----------+------------+\n| 1         | 8          |\n| 2         | 23         |\n| 3         | 21         |\n| 4         | 2          |\n+-----------+------------+\nШаг 2. В результирующей таблице предыдущего запроса необходимо найти максимальное значение, то есть 23. Для этого запросу, созданному на шаге 1, необходимо присвоить имя (например, query_in) и использовать его в качестве таблицы-источника после FROM. Затем уже находить максимум по столбцу sum_amount.\nЗапрос:  \nSELECT MAX(sum_amount) AS max_sum_amount\nFROM \n    (\n     SELECT author_id, SUM(amount) AS sum_amount \n     FROM book \n     GROUP BY author_id\n    ) query_in\nРезультат:\n+----------------+\n| max_sum_amount |\n+----------------+\n| 23             |\n+----------------+\nШаг 3. Выведем фамилию автора и общее количество книг для него.\nЗапрос:  \nSELECT name_author, SUM(amount) as Количество\nFROM \n    author INNER JOIN book\n    on author.author_id = book.author_id\nGROUP BY name_author\nРезультат:\n+------------------+------------+\n| name_author      | Количество |\n+------------------+------------+\n| Булгаков М.А.    | 8          |\n| Достоевский Ф.М. | 23         |\n| Есенин С.А.      | 21         |\n| Пастернак Б.Л.   | 2          |\n+------------------+------------+\nШаг 4.  Включим запрос с шага 2 в условие отбора запроса с шага 3. И получим всех авторов, общее количество книг которых максимально.\n Запрос:  \nSELECT name_author, SUM(amount) as Количество\nFROM \n    author INNER JOIN book\n    on author.author_id = book.author_id\nGROUP BY name_author\nHAVING SUM(amount) = \n     (/* вычисляем максимальное из общего количества книг каждого автора */\n      SELECT MAX(sum_amount) AS max_sum_amount\n      FROM \n          (/* считаем количество книг каждого автора */\n            SELECT author_id, SUM(amount) AS sum_amount \n            FROM book GROUP BY author_id\n          ) query_in\n      );\nРезультат:\n+------------------+------------+\n| name_author      | Количество |\n+------------------+------------+\n| Достоевский Ф.М. | 23         |\n+------------------+------------+\nЗадание\nВывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. Поскольку у нас в таблицах так занесены данные, что у каждого автора книги только в одном жанре,  для этого запроса внесем изменения в таблицу book. Пусть у нас  книга Есенина «Черный человек» относится к жанру «Роман», а книга Булгакова «Белая гвардия» к «Приключениям» (эти изменения в таблицы уже внесены).\nЛогическая схема базы данных:\n\nТекст задания (чтобы не прокручивать страницу):\n\n Вывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. Поскольку у нас в таблицах так занесены данные, что у каждого автора книги только в одном жанре,  для этого запроса внесем изменения в таблицу book. Пусть у нас  книга Есенина «Черный человек» относится к жанру «Роман», а книга Булгакова «Белая гвардия» к «Приключениям» (эти изменения в таблицы уже внесены).\n\nРезультат\n+------------------+\n| name_author      |\n+------------------+\n| Достоевский Ф.М. |\n| Пастернак Б.Л.   |\n+------------------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 3        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 1        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": []
                }
            },
            {
                "id_step": 1095886,
                "text": {
                    "text": "Вложенные запросы в операторах соединения\nВложенные запросы могут использоваться в операторах соединения JOIN.  При этом им необходимо присваивать имя, которое записывается сразу после закрывающей скобки вложенного запроса.\nSELECT\n ...\nFROM\n    таблица ... JOIN  \n       (\n        SELECT ...\n       ) имя_вложенного_запроса\n    ON условие\n...\nВложенный запрос может стоять как справа, так и слева от оператора JOIN. Допускается использование двух запросов в операторах соединения.\nПример\nВывести авторов, пишущих книги в самом популярном жанре. Указать этот жанр.\nСамым популярным считать жанр, общее количество экземпляров книг которого на складе максимально. Таких жанров может быть несколько, если они имеют одинаковое максимальное значение общего количества экземпляров. Только для этого шага изменена запись в таблице book.\n\n[TABLE]\n\nА также добавлены новые записи:\n\n[TABLE]\n\nРассмотрим реализацию этого запроса по шагам.\nШаг 1. Найдем общее количество книг по каждому жанру, отсортируем его по убыванию и ограничим вывод одной строкой. Рекомендуется, если запрос будет использоваться в качестве вложенного (особенно в операциях соединения), вычисляемым полям запроса давать собственное имя.\nЗапрос:\nSELECT genre_id, SUM(amount) AS sum_amount\nFROM book\nGROUP BY genre_id\nORDER BY sum_amount DESC\nLIMIT 1\nРезультат:\n+---------------+------------+\n|  genre_id     | sum_amount |\n+---------------+------------+\n| 1             | 31         |\n+---------------+------------+\nКажется, что, уже используя этот запрос, можно получить id самого популярного жанра. Но это не так, поскольку несколько жанров могут иметь одинаковую популярность. Поэтому нам необходим запрос, который отберет ВСЕ жанры, суммарное количество книг которых равно sum_amount.\nШаг 2. Используя запрос с предыдущего шага, найдем id самых популярных жанров.\nЗапрос:\nSELECT query_in_1.genre_id\nFROM \n    (/* выбираем код жанра и количество произведений, относящихся к нему */\n      SELECT genre_id, SUM(amount) AS sum_amount\n      FROM book\n      GROUP BY genre_id \n    )query_in_1\n    INNER JOIN\n    (/* выбираем запись, в которой указан код жанр с максимальным количеством книг */\n      SELECT genre_id, SUM(amount) AS sum_amount\n      FROM book\n      GROUP BY genre_id\n      ORDER BY sum_amount DESC\n      LIMIT 1\n     ) query_in_2\n     ON query_in_1.sum_amount= query_in_2.sum_amount              \n  \nРезультат:\n+----------+\n| genre_id |\n+----------+\n| 1        |\n| 2        |\n+----------+\nШаг 3. Используя запрос с шага 2, выведем фамилии авторов, которые пишут в самых популярных жанрах, и названия этих жанров. В этом запросе обязательно выполнить группировку по фамилиям авторов и id жанров, так как без этого фамилии авторов будут повторяться, поскольку в таблице book есть разные книги, написанные автором в одном жанре.\nЗапрос:\nSELECT  name_author, name_genre\nFROM \n    author \n    INNER JOIN book ON author.author_id = book.author_id\n    INNER JOIN genre ON  book.genre_id = genre.genre_id\nGROUP BY name_author,name_genre, genre.genre_id\nHAVING genre.genre_id IN\n         (/* выбираем автора, если он пишет книги в самых популярных жанрах*/\n          SELECT query_in_1.genre_id\n          FROM \n              ( /* выбираем код жанра и количество произведений, относящихся к нему */\n                SELECT genre_id, SUM(amount) AS sum_amount\n                FROM book\n                GROUP BY genre_id\n               )query_in_1\n          INNER JOIN \n              ( /* выбираем запись, в которой указан код жанр с максимальным количеством книг */\n                SELECT genre_id, SUM(amount) AS sum_amount\n                FROM book\n                GROUP BY genre_id\n                ORDER BY sum_amount DESC\n                LIMIT 1\n               ) query_in_2\n          ON query_in_1.sum_amount= query_in_2.sum_amount\n         );   \nВажно!\n\nОбратите внимание, что в группировку включен столбецgenre_id, который используется в HAVING. Это связано с тем, что в HAVING можно использовать либо столбцы, перечисленные в GROUP BY, либо вычисляемые с помощью групповых функций столбцы. Добавление столбца genre_idне влияет на группировку, так как между названием жанра и его id - взаимно-однозначное соответствие.\nНазвание столбца genre_id задается с указанием имени таблицы (genre.genre_id), так как этот столбец входит в структуру двух таблиц book и genre.  Для этого запроса можно было бы указать и book.genre_id, так как эти таблицы связаны внутренним соединением INNER JOIN и имеют одинаковые значения в полях genre.genre_id и book.genre_id.\n\nРезультат:\n+------------------+------------+\n| name_author      | name_genre |\n+------------------+------------+\n| Достоевский Ф.М. | Роман      |\n| Булгаков М.А.    | Роман      |\n| Пастернак Б.Л.   | Поэзия     |\n| Есенин С.А.      | Поэзия     |\n+------------------+------------+\nЗадание\nВывести информацию о книгах (название книги, фамилию и инициалы автора, название жанра, цену и количество экземпляров книги), написанных в самых популярных жанрах, в отсортированном в алфавитном порядке по названию книг виде. Самым популярным считать жанр, общее количество экземпляров книг которого на складе максимально.\nЛогическая схема базы данных:\n\nТекст задания (чтобы не прокручивать страницу):\n\n Вывести информацию о книгах (название книги, фамилию и инициалы автора, название жанра, цену и количество экземпляров книг), написанных в самых популярных жанрах, в отсортированном в алфавитном порядке по названию книг виде. Самым популярным считать жанр, общее количество экземпляров книг которого на складе максимально.\n\nРезультат\n+-----------------------+------------------+------------+--------+--------+\n| title                 | name_author      | name_genre | price  | amount |\n+-----------------------+------------------+------------+--------+--------+\n| Белая гвардия         | Булгаков М.А.    | Роман      | 540.50 | 5      |\n| Братья Карамазовы     | Достоевский Ф.М. | Роман      | 799.01 | 3      |\n| Игрок                 | Достоевский Ф.М. | Роман      | 480.50 | 10     |\n| Идиот                 | Достоевский Ф.М. | Роман      | 460.00 | 10     |\n| Лирика                | Пастернак Б.Л.   | Поэзия     | 518.99 | 10     |\n| Мастер и Маргарита    | Булгаков М.А.    | Роман      | 670.99 | 3      |\n| Стихотворения и поэмы | Есенин С.А.      | Поэзия     | 650.00 | 15     |\n| Черный человек        | Есенин С.А.      | Поэзия     | 570.20 | 6      |\n+-----------------------+------------------+------------+--------+--------+\n\nСтруктура и наполнение таблиц\nТаблица genre:\n+----------+-------------+\n| genre_id | name_genre  |\n+----------+-------------+\n| 1        | Роман       |\n| 2        | Поэзия      |\n| 3        | Приключения |\n+----------+-------------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 4       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 5       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 6       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 7       | Лирика                | 4         | 2        | 518.99 | 10     |\n| 8       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 9       | Герой нашего времени  | 5         | 3        | 570.59 | 2      |\n| 10      | Доктор Живаго         | 4         | 3        | 740.50 | 5      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": [
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"8\"},\"1\":{\"0\":\"title\",\"1\":\"Лирика\"},\"2\":{\"0\":\"author_id\",\"1\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"2\"},\"4\":{\"0\":\"price\",\"1\":\"518.9910\"},\"5\":{\"0\":\"amount\",\"1\":\"10\"}}",
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"9\",\"2\":\"10\"},\"1\":{\"0\":\"title\",\"1\":\"Герой нашего времени\",\"2\":\"Доктор Живаго\"},\"2\":{\"0\":\"author_id\",\"1\":\"5\",\"2\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"3\",\"2\":\"3\"},\"4\":{\"0\":\"price\",\"1\":\"570.59\",\"2\":\"740.50\"},\"5\":{\"0\":\"amount\",\"1\":\"2\",\"2\":\"5\"}}"
                    ]
                }
            },
            {
                "id_step": 1345442,
                "text": {
                    "text": "Операция соединение, использование USING()\nДанный шаг добавлен по предложениям пользователей (Валерий Родькин, Todor Illia  и другие).\nПри описании соединения таблиц с помощью JOIN в некоторых случаях вместо ON и следующего за ним условия можно использовать оператор USING().\nUSING позволяет указать набор столбцов, которые есть в обеих объединяемых таблицах. Если база данных хорошо спроектирована, а каждый внешний ключ имеет такое же имя, как и соответствующий первичный ключ (например, genre.genre_id = book.genre_id), тогда можно использовать предложение USING для реализации операции JOIN. \nПри этом после SELECT, при использовании столбцов из USING(), необязательно указывать, из какой именно таблицы берется столбец.\nПример\nВывести название книг, фамилии и id их авторов.\nЗапрос:\nВариант с ON\nSELECT title, name_author, author.author_id /* явно указать таблицу - обязательно */\nFROM \n    author INNER JOIN book\n    ON author.author_id = book.author_id;\nВариант с USING\nSELECT title, name_author, author_id /* имя таблицы, из которой берется author_id, указывать не обязательно*/\nFROM \n    author INNER JOIN book\n    USING(author_id);\nРезультат (одинаковый для обоих запросов):\n+-----------------------+------------------+-----------+\n| title                 | name_author      | author_id |\n+-----------------------+------------------+-----------+\n| Мастер и Маргарита    | Булгаков М.А.    | 1         |\n| Белая гвардия         | Булгаков М.А.    | 1         |\n| Идиот                 | Достоевский Ф.М. | 2         |\n| Братья Карамазовы     | Достоевский Ф.М. | 2         |\n| Игрок                 | Достоевский Ф.М. | 2         |\n| Стихотворения и поэмы | Есенин С.А.      | 3         |\n| Черный человек        | Есенин С.А.      | 3         |\n| Лирика                | Пастернак Б.Л.   | 4         |\n+-----------------------+------------------+-----------+\nЗапись условия соединения с ON является более общим случаем, так как\n\nпозволяет задавать соединение не только по одноименным полям;\nпозволяет использовать произвольное условие на соединение таблиц, при этом в условие может включаться произвольное выражение, например, можно указать связь двух таблиц по двум и более столбцам.\n\nПример\nВ таблице supply занесена информация о книгах, поступивших на склад.\n\n[TABLE]\n\nЕсли в таблицах supply  и book есть одинаковые книги,  вывести их название и автора. При этом учесть, что у нескольких авторов могут быть книги с одинаковым названием.\nВажно. В данном примере для соединения book и supply использовать USING нельзя, так как: \n\nв таблице book фамилий авторов вообще нет (их необходимо получить из таблицы author, столбец name_author),  а в таблице supply фамилии занесены в столбец author;\nдля однозначной идентификации книги нужно указать, что совпадают не только названия, но и авторы книг.\n\nЗапрос:\nSELECT book.title, name_author\nFROM \n    author \n    INNER JOIN book USING (author_id)   \n    INNER JOIN supply ON book.title = supply.title \n                         and author.name_author = supply.author;\n\nРезультат:\n+----------------+------------------+\n| title          | name_author      |\n+----------------+------------------+\n| Идиот          | Достоевский Ф.М. |\n| Черный человек | Есенин С.А.      |\n+----------------+------------------+\n\n\nЗадание\nЕсли в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.\nСхема данных:\n \n\nТекст задания (чтобы не прокручивать страницу):\n\n Если в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.\n\nРезультат\n+----------------+-------------+------------+\n| Название       | Автор       | Количество |\n+----------------+-------------+------------+\n| Черный человек | Есенин С.А. | 12         |\n+----------------+-------------+------------+\n\nСтруктура и наполнение таблиц\nТаблица supply:\n+-----------+----------------+------------------+--------+--------+\n| supply_id | title          | author           | price  | amount |\n+-----------+----------------+------------------+--------+--------+\n| 1         | Доктор Живаго  | Пастернак Б.Л.   | 618.99 | 3      |\n| 2         | Черный человек | Есенин С.А.      | 570.20 | 6      |\n| 3         | Евгений Онегин | Пушкин А.С.      | 440.80 | 5      |\n| 4         | Идиот          | Достоевский Ф.М. | 360.80 | 3      |\n+-----------+----------------+------------------+--------+--------+\n\nТаблица author:\n+-----------+------------------+\n| author_id | name_author      |\n+-----------+------------------+\n| 1         | Булгаков М.А.    |\n| 2         | Достоевский Ф.М. |\n| 3         | Есенин С.А.      |\n| 4         | Пастернак Б.Л.   |\n| 5         | Лермонтов М.Ю.   |\n+-----------+------------------+\n\nТаблица book:\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 2      |\n+---------+-----------------------+-----------+----------+--------+--------+\n",
                    "tables": [
                        "{\"0\":{\"0\":\"supply_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\"},\"1\":{\"0\":\"title\",\"1\":\"Доктор Живаго\",\"2\":\"Черный человек\",\"3\":\"Евгений Онегин\",\"4\":\"Идиот\"},\"2\":{\"0\":\"author\",\"1\":\"Пастернак Б.Л.\",\"2\":\"Есенин С.А.\",\"3\":\"Пушкин А.С.\",\"4\":\"Достоевский Ф.М.\"},\"3\":{\"0\":\"price\",\"1\":\"618.99\",\"2\":\"570.20\",\"3\":\"440.80\",\"4\":\"360.80\"},\"4\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"6\",\"3\":\"5\",\"4\":\"3\"}}"
                    ]
                }
            },
            {
                "id_step": 1094647,
                "text": {
                    "text": "Задание\nПридумайте один или несколько запросов для таблиц book,  author, genre и city. Проверьте, правильно ли они работают.\nПри желании можно формулировку запросов  разместить в комментариях. \nРазмещенные задания можно использовать для закрепления материала урока.\nОценивайте понравившиеся Вам запросы.\nВ последнем модуле создан отдельный урок, в котором мы разместим запросы, набравшие наибольшее количество лайков. \nЛогическая схема базы данных:\n\nСтруктура и наполнение таблиц:\nТаблица author:\n\n[TABLE]\n\nТаблица genre:\n\n[TABLE]\n\nТаблица book :\n\n[TABLE]\n\nТаблица city:\n\n[TABLE]\n",
                    "tables": [
                        "{\"0\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\"},\"1\":{\"0\":\"name_author\",\"1\":\"Булгаков М.А.\",\"2\":\"Достоевский Ф.М.\",\"3\":\"Есенин С.А.\",\"4\":\"Пастернак Б.Л.\",\"5\":\"Лермонтов М.Ю.\"}}",
                        "{\"0\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_genre\",\"1\":\"Роман\",\"2\":\"Поэзия\",\"3\":\"Приключения\"}}",
                        "{\"0\":{\"0\":\"book_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"6\",\"7\":\"7\",\"8\":\"8\"},\"1\":{\"0\":\"title\",\"1\":\"Мастер и Маргарита\",\"2\":\"Белая гвардия\",\"3\":\"Идиот\",\"4\":\"Братья Карамазовы\",\"5\":\"Игрок\",\"6\":\"Стихотворения и поэмы\",\"7\":\"Черный человек\",\"8\":\"Лирика\"},\"2\":{\"0\":\"author_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"3\",\"7\":\"3\",\"8\":\"4\"},\"3\":{\"0\":\"genre_id\",\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\"},\"4\":{\"0\":\"price\",\"1\":\"670.99\",\"2\":\"540.50\",\"3\":\"460.00\",\"4\":\"799.01\",\"5\":\"480.50\",\"6\":\"650.00\",\"7\":\"570.20\",\"8\":\"518.99\"},\"5\":{\"0\":\"amount\",\"1\":\"3\",\"2\":\"5\",\"3\":\"10\",\"4\":\"3\",\"5\":\"10\",\"6\":\"15\",\"7\":\"6\",\"8\":\"2\"}}",
                        "{\"0\":{\"0\":\"city_id\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"},\"1\":{\"0\":\"name_city\",\"1\":\"Москва\",\"2\":\"Санкт-Петербург\",\"3\":\"Владивосток\"}}"
                    ]
                }
            }
        ]
    }
]