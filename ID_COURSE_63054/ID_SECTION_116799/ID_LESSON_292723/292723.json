[
    {
        "id_lesson": 292723,
        "steps": [
            {
                "id_step": 1095898,
                "text": {
                    "text": "Содержание урока\nС помощью запросов корректировки данных можно выполнить следующие действия по обработке заказов в интернет-магазине:\n\nвключение нового клиента в базу данных;\nформирование нового заказа некоторым пользователем;\nвключение в заказ одной или нескольких книг с указанием их количества;\nуменьшение количества книг на складе;\nсоздание счета на оплату (полный счет, итоговый счет);\nдобавление этапов продвижения заказа;\nфиксация дат прохождения каждого этапа заказа (начало этапа, завершение этапа).\n\nПредметная область, логическая структура базы данных, содержание таблиц – как на предыдущем уроке.",
                    "tables": []
                }
            },
            {
                "id_step": 1119042,
                "text": {
                    "text": "Задание\nВключить нового человека в таблицу с клиентами. Его имя Попов Илья, его email popov@test, проживает он в Москве.\nФрагмент логической схемы базы данных:\n\nПояснение\n1. В запросах на добавление можно одновременно заносить и константы, и данные из других таблиц. Для этого в той части запроса INSERT , где задается запрос на выборку, в качестве полей для вставки указываются не только поля других таблиц, но и  константы:\nINSERT INTO ... \nSELECT 'Попов Илья', city_id, 'popov@test'\nFROM city\nWHERE ...;\n2. Для просмотра той таблицы, в которую внесены изменения, используйте запрос вида:\nSELECT * FROM таблица;\n\nСвязанные шаги\n\nдобавление записей;\nусловие отбора (шаг, шаг).\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\n Включить нового человека в таблицу с клиентами. Его имя Попов Илья, его email popov@test, проживает он в Москве.\n\nРезультат\nAffected rows: 1\n\nQuery result (выборка из таблицы client):\n+-----------+-----------------+---------+----------------+\n| client_id | name_client     | city_id | email          |\n+-----------+-----------------+---------+----------------+\n| 1         | Баранов Павел   | 3       | baranov@test   |\n| 2         | Абрамова Катя   | 1       | abramova@test  |\n| 3         | Семенонов Иван  | 2       | semenov@test   |\n| 4         | Яковлева Галина | 1       | yakovleva@test |\n| 5         | Попов Илья      | 1       | popov@test     |\n+-----------+-----------------+---------+----------------+\n\nНаполнение таблиц (перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119043,
                "text": {
                    "text": "Задание\nСоздать новый заказ для Попова Ильи. Его комментарий для заказа: «Связаться со мной по вопросу доставки».\nФрагмент логической схемы базы данных:\n\nСвязанные шаги\n\nдобавление записей;\nусловие отбора (шаг, шаг);\nдобавление константы.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\n Создать новый заказ для Попова Ильи. Его комментарий для заказа: «Связаться со мной по вопросу доставки».\nВажно! В решении нельзя использоваться VALUES и делать отбор по client_id.\n\nРезультат\nAffected rows: 1\n\nQuery result (выборка из таблицы buy):\n+--------+---------------------------------------+-----------+\n| buy_id | buy_description                       | client_id |\n+--------+---------------------------------------+-----------+\n| 1      | Доставка только вечером               | 1         |\n| 2      | NULL                                  | 3         |\n| 3      | Упаковать каждую книгу по отдельности | 2         |\n| 4      | NULL                                  | 1         |\n| 5      | Связаться со мной по вопросу доставки | 5         |\n+--------+---------------------------------------+-----------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119059,
                "text": {
                    "text": "Задание\nВ таблицу buy_book добавить заказ с номером 5. Этот заказ должен содержать книгу Пастернака «Лирика» в количестве двух экземпляров и книгу Булгакова «Белая гвардия» в одном экземпляре.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля вставки каждой книги используйте отдельный запрос. Не забывайте между запросами ставить точку с запятой.\n\nСвязанные шаги\n\nдобавление записей (шаг, шаг, шаг);\nусловие отбора (шаг, шаг, шаг, шаг);\nдобавление константы.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nВ таблицу buy_book добавить заказ с номером 5. Этот заказ должен содержать книгу Пастернака «Лирика» в количестве двух экземпляров и книгу Булгакова «Белая гвардия» в одном экземпляре.\n\nРезультат\n\nAffected rows: 1\n\nAffected rows: 1\n\nQuery result (выборка из таблицы buy_book):\n+-------------+--------+---------+--------+\n| buy_book_id | buy_id | book_id | amount |\n+-------------+--------+---------+--------+\n| 1           | 1      | 1       | 1      |\n| 2           | 1      | 7       | 2      |\n| 3           | 1      | 4       | 1      |\n| 4           | 2      | 8       | 2      |\n| 5           | 3      | 3       | 2      |\n| 6           | 3      | 2       | 1      |\n| 7           | 3      | 1       | 1      |\n| 8           | 4      | 5       | 1      |\n| 9           | 5      | 8       | 2      |\n| 10          | 5      | 2       | 1      |\n+-------------+--------+---------+--------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119068,
                "text": {
                    "text": "Задание\nКоличество тех книг на складе, которые были включены в заказ с номером 5, уменьшить на то количество, которое в заказе с номером 5  указано.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля изменения количества книг используйте запрос UPDATE.\n\nСвязанные шаги\n\nобновление данных (шаг, шаг);\nусловие отбора (шаг, шаг).\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nУменьшить количество тех книг на складе, которые были включены в заказ с номером 5.\n\nРезультат\nAffected rows: 2\n\nQuery result (выборка из таблицы book):\n+---------+-----------------------+-----------+----------+--------+--------+\n| book_id | title                 | author_id | genre_id | price  | amount |\n+---------+-----------------------+-----------+----------+--------+--------+\n| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |\n| 2       | Белая гвардия         | 1         | 1        | 540.50 | 4      |\n| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |\n| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |\n| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |\n| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |\n| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |\n| 8       | Лирика                | 4         | 2        | 518.99 | 0      |\n+---------+-----------------------+-----------+----------+--------+--------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119072,
                "text": {
                    "text": "Задание\nСоздать счет (таблицу buy_pay) на оплату заказа с номером 5, в который включить название книг, их автора, цену, количество заказанных книг и  стоимость. Последний столбец назвать Стоимость. Информацию в таблицу занести в отсортированном по названиям книг виде.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля создании таблицы используйте запрос CREATE.\n\nСвязанные шаги\n\nсоздание таблицы;\nсоединение таблиц;\nусловие отбора;\nвыборка столбцов и их именование;\nвычисления в SELECT;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nСоздать счет (таблицу buy_pay) на оплату заказа с номером 5, в который включить название книг, их автора, цену, количество заказанных книг и  стоимость. Последний столбец назвать Стоимость. Информацию в таблицу занести в отсортированном по названиям книг виде.\n\nРезультат\nAffected rows: 2\n\nQuery result (выборка из таблицы buy_pay):\n+---------------+----------------+--------+--------+-----------+\n| title         | name_author    | price  | amount | Стоимость |\n+---------------+----------------+--------+--------+-----------+\n| Белая гвардия | Булгаков М.А.  | 540.50 | 1      | 540.50    |\n| Лирика        | Пастернак Б.Л. | 518.99 | 2      | 1037.98   |\n+---------------+----------------+--------+--------+-----------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119547,
                "text": {
                    "text": "Задание\nСоздать общий счет (таблицу buy_pay) на оплату заказа с номером 5. Куда включить номер заказа, количество книг в заказе (название столбца Количество) и его общую стоимость (название столбца Итого). Для решения используйте ОДИН запрос.\nФрагмент логической схемы базы данных:\n\nСвязанные шаги\n\nсоздание таблицы;\nсоединение таблиц;\nусловие отбора;\nвыборка столбцов и их именование;\nвычисления в SELECT;\nвычисления для сгруппированных данных.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nСоздать общий счет (таблицу buy_pay) на оплату заказа с номером 5. Куда включить номер заказа, количество книг в заказе (название столбца Количество) и его общую стоимость (название столбца Итого).  Для решения используйте ОДИН запрос.\n\nРезультат\nAffected rows: 1\n\nQuery result (выборка из таблицы buy_pay):\n+--------+------------+---------+\n| buy_id | Количество | Итого   |\n+--------+------------+---------+\n| 5      | 3          | 1578.48 |\n+--------+------------+---------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119596,
                "text": {
                    "text": "Задание\nВ таблицу buy_step для заказа с номером 5 включить все этапы из таблицы step, которые должен пройти этот заказ. В столбцы date_step_beg и date_step_end всех записей занести Null.\nФрагмент логической схемы базы данных:\n\nПояснение\nВсе этапы в таблицу buy_step можно вставить одним запросом, для этого используется соединение CROSS JOIN для таблиц buy и step.\n\nСвязанные шаги\n\nдобавление записей;\nсоединение таблиц;\nусловие отбора.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nВ таблицу buy_step для заказа с номером 5 включить все этапы из таблицы step, которые должен пройти этот заказ. В столбцы date_step_beg и date_step_end всех записей занести Null.\n\nРезультат\nAffected rows: 4\n\nQuery result (выборка из таблицы buy_step):\n+-------------+--------+---------+---------------+---------------+\n| buy_step_id | buy_id | step_id | date_step_beg | date_step_end |\n+-------------+--------+---------+---------------+---------------+\n| 1           | 1      | 1       | 2020-02-20    | 2020-02-20    |\n| 2           | 1      | 2       | 2020-02-20    | 2020-02-21    |\n| 3           | 1      | 3       | 2020-02-22    | 2020-03-07    |\n| 4           | 1      | 4       | 2020-03-06    | 2020-03-06    |\n| 5           | 2      | 1       | 2020-02-28    | 2020-02-28    |\n| 6           | 2      | 2       | 2020-02-29    | 2020-03-01    |\n| 7           | 2      | 3       | 2020-03-02    | NULL          |\n| 8           | 2      | 4       | NULL          | NULL          |\n| 9           | 3      | 1       | 2020-03-05    | 2020-03-05    |\n| 10          | 3      | 2       | 2020-03-05    | 2020-03-06    |\n| 11          | 3      | 3       | 2020-03-06    | 2020-03-10    |\n| 12          | 3      | 4       | 2020-03-11    | NULL          |\n| 13          | 4      | 1       | 2020-03-20    | NULL          |\n| 14          | 4      | 2       | NULL          | NULL          |\n| 15          | 4      | 3       | NULL          | NULL          |\n| 16          | 4      | 4       | NULL          | NULL          |\n| 17          | 5      | 1       | NULL          | NULL          |\n| 18          | 5      | 2       | NULL          | NULL          |\n| 19          | 5      | 3       | NULL          | NULL          |\n| 20          | 5      | 4       | NULL          | NULL          |\n+-------------+--------+---------+---------------+---------------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119659,
                "text": {
                    "text": "Задание\nВ таблицу buy_step занести дату 12.04.2020 выставления счета на оплату заказа с номером 5.\nПравильнее было бы занести не конкретную, а текущую дату. Это можно сделать с помощью функции Now(). Но при этом в разные дни будут вставляться разная дата, и задание нельзя будет проверить, поэтому  вставим дату 12.04.2020.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля просмотра данных из таблицы buy_step выбраны не все  записи, а только те, которые относятся к заказу с номером 5.\n\nСвязанные шаги\n\nобновление данных;\nусловие отбора (шаг, шаг, шаг).\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nВ таблицу buy_step занести дату 12.04.2020 выставления счета на оплату заказа с номером 5.\nПравильнее было бы занести не конкретную, а текущую дату. Это можно сделать с помощью функции Now(). Но при этом в разные дни будут вставляться разная дата, и задание нельзя будет проверить, поэтому  вставим дату 12.04.2020.\n\nРезультат\nAffected rows: 1\n\nQuery result (выборка из таблицы buy_step для заказа с номером 5):\n+-------------+--------+---------+---------------+---------------+\n| buy_step_id | buy_id | step_id | date_step_beg | date_step_end |\n+-------------+--------+---------+---------------+---------------+\n| 17          | 5      | 1       | 2020-04-12    | NULL          |\n| 18          | 5      | 2       | NULL          | NULL          |\n| 19          | 5      | 3       | NULL          | NULL          |\n| 20          | 5      | 4       | NULL          | NULL          |\n+-------------+--------+---------+---------------+---------------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1119692,
                "text": {
                    "text": "Задание\nЗавершить этап «Оплата» для заказа с номером 5, вставив в столбец date_step_end дату 13.04.2020, и начать следующий этап («Упаковка»), задав в столбце date_step_beg для этого этапа ту же дату.\nРеализовать два запроса для завершения этапа и начала следующего. Они должны быть записаны в общем виде, чтобы его можно было применять для любых этапов, изменив только текущий этап. Для примера пусть это будет этап «Оплата».\nФрагмент предметной области:\n\nПояснение\nВ таблицу step все необходимые этапы занесены последовательно. Если текущий этап «Оплата», его id 1, то у следующего этапа «Упаковка» id будет на единицу больше, то есть 2. Поэтому в условии отбора запроса, который обновляет дату начала следующего этапа, можно использовать вложенный запрос, который выбирает id этапа на 1 больше, чем у текущего:\nSELECT step_id + 1 \nFROM step\nWHERE name_step = 'Оплата'\n\nСвязанные шаги\n\nобновление данных;\nусловие отбора (шаг, шаг, шаг);\nвложенные запросы в условии отбора.\n\n\nТекст задания (чтобы не прокручивать страницу) : \n\nЗавершить этап «Оплата» для заказа с номером 5, вставив в столбец date_step_end дату 13.04.2020, и начать следующий этап («Упаковка»), задав в столбце date_step_beg для этого этапа ту же дату.\nРеализовать два запроса для завершения этапа и начале следующего. Они должны быть записаны в общем виде, чтобы его можно было применять для любых этапов, изменив только текущий этап. Для примера пусть это будет этап «Оплата».\n\nРезультат\nAffected rows: 1\n\nAffected rows: 1\n\nQuery result (выборка из таблицы buy_step для заказа с номером 5):\n+-------------+--------+---------+---------------+---------------+\n| buy_step_id | buy_id | step_id | date_step_beg | date_step_end |\n+-------------+--------+---------+---------------+---------------+\n| 17          | 5      | 1       | 2020-04-12    | 2020-04-13    |\n| 18          | 5      | 2       | 2020-04-13    | NULL          |\n| 20          | 5      | 4       | NULL          | NULL          |\n+-------------+--------+---------+---------------+---------------+\n\nНаполнение таблиц(перед выполнением шага) ",
                    "tables": []
                }
            },
            {
                "id_step": 1132037,
                "text": {
                    "text": "Задание\nПридумайте один или несколько запросов корректировки данных для предметной области «Интернет-магазин книг» (в таблицы занесены данные, как на этом шаге). Проверьте, правильно ли они работают.\nПри желании можно формулировку запросов  разместить в комментариях. \nРазмещенные задания можно реализовать для закрепления материала урока.\nОценивайте понравившиеся Вам запросы.\nВ последнем модуле создан отдельный урок, в котором мы разместим запросы, набравшие наибольшее количество лайков. \nЛогическая схема базы данных:\n\nНаполнение таблиц ",
                    "tables": []
                }
            }
        ]
    }
]