[
    {
        "id_lesson": 292727,
        "steps": [
            {
                "id_step": 1095908,
                "text": {
                    "text": "Предметная область\nВ университете реализуется on-line тестирование по нескольким дисциплинам. Каждая дисциплина включает некоторое количество вопросов. Ответы на вопрос представлены в виде вариантов ответов, один из этих вариантов правильный.\nСтудент регистрируется в системе, указав свое имя, фамилию и отчество. После этого он может проходить тестирование по одной или нескольким дисциплинам. Студент имеет несколько попыток для прохождения тестирования  (необходимо сохранять дату попытки). Каждому студенту случайным образом выбирается набор вопросов по дисциплине и формируется индивидуальный тест. Студент отвечает на вопросы, выбирая один из предложенных вариантов ответа.\nПосле окончания тестирования  вычисляется и сохраняется результат (в процентах) попытки.\nЗапросы для предметной области:\n\nВывести студентов, которые сдавали определенную дисциплину.\nВывести количество попыток и средний результат по каждой дисциплине.\nВывести студента (студентов), которые набрали максимальный результат при тестировании.\nЕсли студент совершал несколько попыток по одной и той же дисциплине, то вывести разницу в днях между первой и последней попыткой.\nВывести количество студентов, которые проходили тестирование по каждой дисциплине.\nСлучайным образом отобрать 3 вопроса по определенной дисциплине.\nВывести вопросы, на которые отвечал определенный студент в определенной попытке, ответ студента и результат (правильно или нет).\nПосчитать результаты тестирования для всех попыток.\nДля каждого вопроса вывести процент успешных решений и общее количество ответов.\n\nКонцептуальная схема базы данных\n\nЛогическая схема базы данных\n\nСтруктура и наполнение таблиц\nТаблица subject:\n\n[TABLE]\n\nТаблица  student :\n\n[TABLE]\n\nТаблица attempt(в таблице хранится информация о каждой попытке сдачи теста : id студента, id дисциплины,  дата попытки и результат в процентах):\n\n[TABLE]\n\nТаблица question(таблица содержит вопросы по каждой дисциплине):\n\n[TABLE]\n\nТаблица answer(в таблице содержатся варианты ответов на каждый вопрос, для правильного варианта столбец is_correct имеет значение true):\n\n[TABLE]\n\nТаблица testing (в таблице хранится информация о каждой попытке студента: какие вопросы были заданы и какой ответ дал студент)\n\n[TABLE]\n\n\n ",
                    "tables": [
                        "{\"0\":{\"0\":\"subject_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\"},\"1\":{\"0\":\"name_subject\",\"1\":\"VARCHAR(30)\",\"2\":\"Основы SQL\",\"3\":\"Основы баз данных\",\"4\":\"Физика\"}}",
                        "{\"0\":{\"0\":\"student_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\"},\"1\":{\"0\":\"name_student\",\"1\":\"VARCHAR(50)\",\"2\":\"Баранов Павел\",\"3\":\"Абрамова Катя\",\"4\":\"Семенов Иван\",\"5\":\"Яковлева Галина\"}}",
                        "{\"0\":{\"0\":\"attempt_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\"},\"1\":{\"0\":\"student_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"3\",\"4\":\"4\",\"5\":\"1\",\"6\":\"3\",\"7\":\"4\",\"8\":\"3\"},\"2\":{\"0\":\"subject_id\",\"1\":\"INT\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"1\"},\"3\":{\"0\":\"date_attempt\",\"1\":\"DATE\",\"2\":\"2020-03-23\",\"3\":\"2020-03-23\",\"4\":\"2020-03-26\",\"5\":\"2020-04-15\",\"6\":\"2020-04-15\",\"7\":\"2020-04-21\",\"8\":\"2020-05-17\"},\"4\":{\"0\":\"result\",\"1\":\"INT\",\"2\":\"67\",\"3\":\"100\",\"4\":\"0\",\"5\":\"33\",\"6\":\"67\",\"7\":\"100\",\"8\":\"33\"}}",
                        "{\"0\":{\"0\":\"question_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\",\"9\":\"8\",\"10\":\"9\"},\"1\":{\"0\":\"name_question\",\"1\":\"VARCHAR(100)\",\"2\":\"Запрос на выборку начинается с ключевого слова:\",\"3\":\"Условие, по которому отбираются записи, задается после ключевого слова:\",\"4\":\"Для сортировки используется:\",\"5\":\"Какой запрос выбирает все записи из таблицы student:\",\"6\":\"Для внутреннего соединения таблиц используется оператор:\",\"7\":\"База данных - это:\",\"8\":\"Отношение - это:\",\"9\":\"Концептуальная модель используется для\",\"10\":\"Какой тип данных не допустим в реляционной таблице?\"},\"2\":{\"0\":\"subject_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"2\",\"9\":\"2\",\"10\":\"2\"}}",
                        "{\"0\":{\"0\":\"answer_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\",\"9\":\"8\",\"10\":\"9\",\"11\":\"10\",\"12\":\"11\",\"13\":\"12\",\"14\":\"13\",\"15\":\"14\",\"16\":\"15\",\"17\":\"16\",\"18\":\"17\",\"19\":\"18\",\"20\":\"19\",\"21\":\"20\",\"22\":\"21\",\"23\":\"22\",\"24\":\"23\",\"25\":\"24\",\"26\":\"25\",\"27\":\"26\",\"28\":\"27\",\"29\":\"28\"},\"1\":{\"0\":\"name_answer\",\"1\":\"VARCHAR(100)\",\"2\":\"UPDATE\",\"3\":\"SELECT\",\"4\":\"INSERT\",\"5\":\"GROUP BY\",\"6\":\"FROM\",\"7\":\"WHERE\",\"8\":\"SELECT\",\"9\":\"SORT\",\"10\":\"ORDER BY\",\"11\":\"RANG BY\",\"12\":\"SELECT * FROM student\",\"13\":\"SELECT student\",\"14\":\"INNER JOIN\",\"15\":\"LEFT JOIN\",\"16\":\"RIGHT JOIN\",\"17\":\"CROSS JOIN\",\"18\":\"совокупность данных, организованных  по определенным правилам\",\"19\":\"совокупность программ для хранения и  обработки больших массивов информации\",\"20\":\"строка\",\"21\":\"столбец\",\"22\":\"таблица\",\"23\":\"обобщенное представление пользователей о данных\",\"24\":\"описание представления данных в памяти компьютера\",\"25\":\"база данных\",\"26\":\"file\",\"27\":\"INT\",\"28\":\"VARCHAR\",\"29\":\"DATE\"},\"2\":{\"0\":\"question_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"2\",\"6\":\"2\",\"7\":\"2\",\"8\":\"2\",\"9\":\"3\",\"10\":\"3\",\"11\":\"3\",\"12\":\"4\",\"13\":\"4\",\"14\":\"5\",\"15\":\"5\",\"16\":\"5\",\"17\":\"5\",\"18\":\"6\",\"19\":\"6\",\"20\":\"7\",\"21\":\"7\",\"22\":\"7\",\"23\":\"8\",\"24\":\"8\",\"25\":\"8\",\"26\":\"9\",\"27\":\"9\",\"28\":\"9\",\"29\":\"9\"},\"3\":{\"0\":\"is_correct\",\"1\":\"BOOL\",\"2\":\"false\",\"3\":\"true\",\"4\":\"false\",\"5\":\"false\",\"6\":\"false\",\"7\":\"true\",\"8\":\"false\",\"9\":\"false\",\"10\":\"true\",\"11\":\"false\",\"12\":\"true\",\"13\":\"false\",\"14\":\"true\",\"15\":\"false\",\"16\":\"false\",\"17\":\"false\",\"18\":\"true\",\"19\":\"false\",\"20\":\"false\",\"21\":\"false\",\"22\":\"true\",\"23\":\"true\",\"24\":\"false\",\"25\":\"false\",\"26\":\"true\",\"27\":\"false\",\"28\":\"false\",\"29\":\"false\"}}",
                        "{\"0\":{\"0\":\"testing_id\",\"1\":\"INT PRIMARY KEY  AUTO_INCREMENT\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"6\",\"8\":\"7\",\"9\":\"8\",\"10\":\"9\",\"11\":\"10\",\"12\":\"11\",\"13\":\"12\",\"14\":\"13\",\"15\":\"14\",\"16\":\"15\",\"17\":\"16\",\"18\":\"17\",\"19\":\"18\",\"20\":\"19\",\"21\":\"20\",\"22\":\"21\"},\"1\":{\"0\":\"attempt_id\",\"1\":\"INT\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"2\",\"6\":\"2\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"10\":\"3\",\"11\":\"4\",\"12\":\"4\",\"13\":\"4\",\"14\":\"5\",\"15\":\"5\",\"16\":\"5\",\"17\":\"6\",\"18\":\"6\",\"19\":\"6\",\"20\":\"7\",\"21\":\"7\",\"22\":\"7\"},\"2\":{\"0\":\"question_id\",\"1\":\"INT\",\"2\":\"9\",\"3\":\"7\",\"4\":\"6\",\"5\":\"3\",\"6\":\"1\",\"7\":\"4\",\"8\":\"6\",\"9\":\"8\",\"10\":\"9\",\"11\":\"1\",\"12\":\"5\",\"13\":\"3\",\"14\":\"2\",\"15\":\"1\",\"16\":\"4\",\"17\":\"6\",\"18\":\"8\",\"19\":\"7\",\"20\":\"1\",\"21\":\"4\",\"22\":\"5\"},\"3\":{\"0\":\"answer_id\",\"1\":\"INT\",\"2\":\"25\",\"3\":\"19\",\"4\":\"17\",\"5\":\"9\",\"6\":\"2\",\"7\":\"11\",\"8\":\"18\",\"9\":\"24\",\"10\":\"28\",\"11\":\"2\",\"12\":\"16\",\"13\":\"10\",\"14\":\"6\",\"15\":\"2\",\"16\":\"12\",\"17\":\"17\",\"18\":\"22\",\"19\":\"21\",\"20\":\"3\",\"21\":\"11\",\"22\":\"16\"}}"
                    ]
                }
            },
            {
                "id_step": 1135195,
                "text": {
                    "text": "Задание\nВывести студентов, которые сдавали дисциплину «Основы баз данных», указать дату попытки и результат. Информацию вывести по убыванию результатов тестирования.\nФрагмент логической схемы базы данных\n​\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nусловие отбора (шаг, шаг);\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\n Вывести студентов, которые сдавали дисциплину «Основы баз данных», указать дату попытки и результат. Информацию вывести по убыванию результатов тестирования.\n\nРезультат\n+-----------------+--------------+--------+\n| name_student    | date_attempt | result |\n+-----------------+--------------+--------+\n| Яковлева Галина | 2020-04-21   | 100    |\n| Баранов Павел   | 2020-03-23   | 67     |\n| Яковлева Галина | 2020-03-26   | 0      |\n+-----------------+--------------+--------+\n\n\nНаполнение таблиц attempt, student, subject\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица student                   таблица subject\n+------------+-----------------+  +------------+-------------------+\n| student_id | name_student    |  | subject_id | name_subject      |\n+------------+-----------------+  +------------+-------------------+\n| 1          | Баранов Павел   |  | 1          | Основы SQL        |\n| 2          | Абрамова Катя   |  | 2          | Основы баз данных |\n| 3          | Семенов Иван    |  | 3          | Физика            |\n| 4          | Яковлева Галина |  +------------+-------------------+\n+------------+-----------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1142891,
                "text": {
                    "text": "Задание\nВывести, сколько попыток сделали студенты по каждой дисциплине, а также средний результат попыток, который округлить до 2 знаков после запятой. Под результатом попытки понимается процент правильных ответов на вопросы теста, который занесен в столбец result.  В результат включить название дисциплины, а также вычисляемые столбцы Количество и Среднее. Информацию вывести по убыванию средних результатов.\nФрагмент логической схемы базы данных\n\nПояснение\nЧтобы вывести дисциплину, тестирование по которой никто не проходил, использовать оператор внешнего соединения.\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nгрупповые функции (шаг, шаг);\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\nВывести, сколько попыток сделали студенты по каждой дисциплине, а также средний результат попыток, который округлить до 2 знаков после запятой. Под результатом попытки понимается процент правильных ответов на вопросы теста, который занесен в столбец result.  В результат включить название дисциплины, а также вычисляемые столбцы Количество и Среднее. Информацию вывести по убыванию средних результатов.\n\nРезультат\n+-------------------+------------+---------+\n| name_subject      | Количество | Среднее |\n+-------------------+------------+---------+\n| Основы SQL        | 4          | 58.25   |\n| Основы баз данных | 3          | 55.67   |\n| Физика            | 0          | NULL    |\n+-------------------+------------+---------+\n\nСтруктура и наполнение таблиц attempt и subject\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица subject\n+------------+-------------------+\n| subject_id | name_subject      |\n+------------+-------------------+\n| 1          | Основы SQL        |\n| 2          | Основы баз данных |\n| 3          | Физика            |\n+------------+-------------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1155061,
                "text": {
                    "text": "Задание\nВывести студентов (различных студентов), имеющих максимальные результаты попыток. Информацию отсортировать в алфавитном порядке по фамилии студента.\nМаксимальный результат не обязательно будет 100%, поэтому явно это значение в запросе не задавать.\nФрагмент логической схемы базы данных:\n\nПояснение\nДля получения максимального результата используйте вложенный запрос. \n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nвложенные запросы в условии отбора;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\nВывести студентов (различных студентов), имеющих максимальные результаты попыток . Информацию отсортировать в алфавитном порядке по фамилии студента.\n\nРезультат\n+-----------------+--------+\n| name_student    | result |\n+-----------------+--------+\n| Семенов Иван    | 100    |\n| Яковлева Галина | 100    |\n+-----------------+--------+\n\nСтруктура и наполнение таблиц attempt и student\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица student\n+------------+-----------------+\n| student_id | name_student    |\n+------------+-----------------+\n| 1          | Баранов Павел   |\n| 2          | Абрамова Катя   |\n| 3          | Семенов Иван    |\n| 4          | Яковлева Галина |\n+------------+-----------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1147986,
                "text": {
                    "text": "Задание\nЕсли студент совершал несколько попыток по одной и той же дисциплине, то вывести разницу в днях между первой и последней попыткой. В результат включить фамилию и имя студента, название дисциплины и вычисляемый столбец Интервал. Информацию вывести по возрастанию разницы. Студентов, сделавших одну попытку по дисциплине, не учитывать. \nФрагмент логической схемы базы данных\n\nПояснение\nДату первой и последней попытки получить как минимальное и максимальное значение даты с помощью групповых функций, для вычисления разницы между датами использовать функцию DATEDIFF().\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nгрупповые функции;\nсоединение таблиц;\nвычитание дат;\nусловие отбора в запросах группировки;\nусловие отбора;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\nЕсли студент совершал несколько попыток по одной и той же дисциплине, то вывести разницу в днях между первой и последней попыткой. В результат включить фамилию и имя студента, название дисциплины и вычисляемый столбец Интервал. Информацию вывести по возрастанию разницы. Студентов, сделавших одну попытку по дисциплине, не учитывать. \n\nРезультат\n+-----------------+-------------------+----------+\n| name_student    | name_subject      | Интервал |\n+-----------------+-------------------+----------+\n| Яковлева Галина | Основы баз данных | 26       |\n| Семенов Иван    | Основы SQL        | 55       |\n+-----------------+-------------------+----------+\n\n\nСтруктура и наполнение таблиц\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица student                   таблица subject\n+------------+-----------------+  +------------+-------------------+\n| student_id | name_student    |  | subject_id | name_subject      |\n+------------+-----------------+  +------------+-------------------+\n| 1          | Баранов Павел   |  | 1          | Основы SQL        |\n| 2          | Абрамова Катя   |  | 2          | Основы баз данных |\n| 3          | Семенов Иван    |  | 3          | Физика            |\n| 4          | Яковлева Галина |  +------------+-------------------+\n+------------+-----------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1146804,
                "text": {
                    "text": "Задание\nСтуденты могут тестироваться по одной или нескольким дисциплинам (не обязательно по всем). Вывести дисциплину и количество уникальных студентов (столбец назвать Количество), которые по ней проходили тестирование . Информацию отсортировать сначала по убыванию количества, а потом по названию дисциплины. В результат включить и дисциплины, тестирование по которым студенты еще не проходили, в этом случае указать количество студентов 0.\nПояснение\nЕсли один и тот же студент тестировался несколько раз по одной и той же дисциплине, то студента учитывать один раз.\n\nФрагмент логической схемы базы данных\n\nПояснение\nЧтобы вывести дисциплину, по которой никто не проходил тестирование, используйте внешнее соединение таблиц.\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nвычисления для сгруппированных данных;\nсоединение таблиц;\nуникальные записи;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу)\n\nСтуденты могут тестироваться по одной или нескольким дисциплинам (не обязательно по всем). Вывести дисциплину и количество уникальных студентов (столбец назвать Количество), которые по ней проходили тестирование . Информацию отсортировать сначала по убыванию количества, а потом по названию дисциплины. В результат включить и дисциплины, тестирование по которым студенты не проходили, в этом случае указать количество студентов 0.\n\nРезультат\n+-------------------+------------+\n| name_subject      | Количество |\n+-------------------+------------+\n| Основы SQL        | 2          |\n| Основы баз данных | 2          |\n| Физика            | 0          |\n+-------------------+------------+\n\nСтруктура и наполнение таблиц attempt и subject\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица subject\n+------------+-------------------+\n| subject_id | name_subject      |\n+------------+-------------------+\n| 1          | Основы SQL        |\n| 2          | Основы баз данных |\n| 3          | Физика            |\n+------------+-------------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1155105,
                "text": {
                    "text": "Задание\nСлучайным образом отберите 3 вопроса по дисциплине «Основы баз данных». В результат включите столбцы question_id и name_question.\nФрагмент логической схемы базы данных\n\nПояснение\nДля выбора случайных вопросов можно отсортировать вопросы в случайном порядке:\nORDER BY RAND()\n\nСвязанные шаги\n\nвыборка столбцов;\nсоединение таблиц;\nусловие отбора (шаг, шаг);\nограничение вывода.\n\n\nТекст задания (чтобы не прокручивать страницу) \n\nСлучайным образом отберите 3 вопроса по дисциплине «Основы баз данных». В результат включите столбцы question_id и name_question.\n\nРезультат\nПримечание: вопросы выбираются случайным образом, поэтому результат выполнения запроса может не совпадать с образцом\n+-------------+----------------------------------------+\n| question_id | name_question                          |\n+-------------+----------------------------------------+\n| 8           | Концептуальная модель используется для |\n| 7           | Отношение - это:                       |\n| 6           | База данных - это:                     |\n+-------------+----------------------------------------+\n\nСтруктура и наполнение таблиц question и subject\nтаблица question\n\n+-------------+-------------------------------------------------------------------------+------------+\n| question_id | name_question                                                           | subject_id |\n+-------------+-------------------------------------------------------------------------+------------+\n| 1           | Запрос на выборку начинается с ключевого слова:                         | 1          |\n| 2           | Условие, по которому отбираются записи, задается после ключевого слова: | 1          |\n| 3           | Для сортировки используется:                                            | 1          |\n| 4           | Какой запрос выбирает все записи из таблицы student:                    | 1          |\n| 5           | Для внутреннего соединения таблиц используется оператор:                | 1          |\n| 6           | База данных - это:                                                      | 2          |\n| 7           | Отношение - это:                                                        | 2          |\n| 8           | Концептуальная модель используется для                                  | 2          |\n| 9           | Какой тип данных не допустим в реляционной таблице?                     | 2          |\n+-------------+-------------------------------------------------------------------------+------------+\nтаблица subject\n+------------+-------------------+\n| subject_id | name_subject      |\n+------------+-------------------+\n| 1          | Основы SQL        |\n| 2          | Основы баз данных |\n| 3          | Физика            |\n+------------+-------------------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1146807,
                "text": {
                    "text": "Задание\nВывести вопросы, которые были включены в тест для Семенова Ивана по дисциплине «Основы SQL» 2020-05-17  (значение attempt_id для этой попытки равно 7). Указать, какой ответ дал студент и правильный он или нет (вывести Верно или Неверно). В результат включить вопрос, ответ и вычисляемый столбец  Результат.\nФрагмент логической схемы базы данных\n\nПояснение\nДля вывода результата используете функцию if().\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nсоединение таблиц;\nфункция IF();\nусловие отбора.\n\n\nТекст задания (чтобы не прокручивать страницу) \n\nВывести вопросы, которые были включены в тест для Семенова Ивана по дисциплине «Основы SQL» 2020-05-17  (значение attempt_id для этой попытки равно 7). Указать, какой ответ дал студент и правильный он или нет(вывести Верно или Неверно). В результат включить вопрос, ответ и вычисляемый столбец  Результат.\n\nРезультат\n+----------------------------------------------------------+-----------------------+-----------+\n| name_question                                            | name_answer           | Результат |\n+----------------------------------------------------------+-----------------------+-----------+\n| Запрос на выборку начинается с ключевого слова:          | INSERT                | Неверно   |\n| Какой запрос выбирает все записи из таблицы student:     | SELECT * FROM student | Верно     |\n| Для внутреннего соединения таблиц используется оператор: | CROSS JOIN            | Неверно   |\n+----------------------------------------------------------+-----------------------+-----------+\n\nНаполнение таблиц question, answer, testing\nтаблица question\n+-------------+------------------------------------------------------------+------------+\n| question_id | name_question                                              | subject_id |\n+-------------+------------------------------------------------------------+------------+\n| 1           | Запрос на выборку начинается с ключевого слова:            | 1          |\n| 2           | Условие, по которому отбираются записи, задается после...  | 1          |\n| 3           | Для сортировки используется:                               | 1          |\n| 4           | Какой запрос выбирает все записи из таблицы student:       | 1          |\n| 5           | Для внутреннего соединения таблиц используется оператор:   | 1          |\n| 6           | База данных - это:                                         | 2          |\n| 7           | Отношение - это:                                           | 2          |\n| 8           | Концептуальная модель используется для                     | 2          |\n| 9           | Какой тип данных не допустим в реляционной таблице?        | 2          |\n+-------------+------------------------------------------------------------+------------+\n\nтаблица answer\n+-----------+--------------------------------------------------------+-------------+------------+\n| answer_id | name_answer                                            | question_id | is_correct |\n+-----------+--------------------------------------------------------+-------------+------------+\n| 1         | UPDATE                                                 | 1           | 0          |\n| 2         | SELECT                                                 | 1           | 1          |\n| 3         | INSERT                                                 | 1           | 0          |\n| 4         | GROUP BY                                               | 2           | 0          |\n| 5         | FROM                                                   | 2           | 0          |\n| 6         | WHERE                                                  | 2           | 1          |\n| 7         | SELECT                                                 | 2           | 0          |\n| 8         | SORT                                                   | 3           | 0          |\n| 9         | ORDER BY                                               | 3           | 1          |\n| 10        | RANG BY                                                | 3           | 0          |\n| 11        | SELECT * FROM student                                  | 4           | 1          |\n| 12        | SELECT student                                         | 4           | 0          |\n| 13        | INNER JOIN                                             | 5           | 1          |\n| 14        | LEFT JOIN                                              | 5           | 0          |\n| 15        | RIGHT JOIN                                             | 5           | 0          |\n| 16        | CROSS JOIN                                             | 5           | 0          |\n| 17        | совокупность данных, организованныхпо определенным...  | 6           | 1          |\n| 18        | совокупность программ для хранения иобработки ...      | 6           | 0          |\n| 19        | строка                                                 | 7           | 0          |\n| 20        | столбец                                                | 7           | 0          |\n| 21        | таблица                                                | 7           | 1          |\n| 22        | обобщенное представление пользователей о данных        | 8           | 1          |\n| 23        | описание представления данных в памяти компьютера      | 8           | 0          |\n| 24        | база данных                                            | 8           | 0          |\n| 25        | file                                                   | 9           | 1          |\n| 26        | INT                                                    | 9           | 0          |\n| 27        | VARCHAR                                                | 9           | 0          |\n| 28        | DATE                                                   | 9           | 0          |\n+-----------+--------------------------------------------------------+-------------+------------+\n\nтаблица testing\n+------------+------------+-------------+-----------+\n| testing_id | attempt_id | question_id | answer_id |\n+------------+------------+-------------+-----------+\n| 1          | 1          | 9           | 25        |\n| 2          | 1          | 7           | 19        |\n| 3          | 1          | 6           | 17        |\n| 4          | 2          | 3           | 9         |\n| 5          | 2          | 1           | 2         |\n| 6          | 2          | 4           | 11        |\n| 7          | 3          | 6           | 18        |\n| 8          | 3          | 8           | 24        |\n| 9          | 3          | 9           | 28        |\n| 10         | 4          | 1           | 2         |\n| 11         | 4          | 5           | 16        |\n| 12         | 4          | 3           | 10        |\n| 13         | 5          | 2           | 6         |\n| 14         | 5          | 1           | 2         |\n| 15         | 5          | 4           | 12        |\n| 16         | 6          | 6           | 17        |\n| 17         | 6          | 8           | 22        |\n| 18         | 6          | 7           | 21        |\n| 19         | 7          | 1           | 3         |\n| 20         | 7          | 4           | 11        |\n| 21         | 7          | 5           | 16        |\n+------------+------------+-------------+-----------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1146812,
                "text": {
                    "text": "Задание\nПосчитать результаты тестирования. Результат попытки вычислить как количество правильных ответов, деленное на 3 (количество вопросов в каждой попытке) и умноженное на 100. Результат округлить до двух знаков после запятой. Вывести фамилию студента, название предмета, дату и результат. Последний столбец назвать Результат. Информацию отсортировать сначала по фамилии студента, потом по убыванию даты попытки.\nПояснение\nВ запрос не рекомендуется включать таблицу question, нужно связать answer непосредственно с testing. Если же в этом запросе использовать связь testing - question - answer и считать верные ответы, то получится, что считаются ВЕРНЫЕ ответы на вопросы, занесенные в таблицу question, а не верные ответы, которые дал пользователь.\n\nЛогическая схема базы данных (чтобы потренироваться выбирать нужные таблицы):\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nвычисления для сгруппированных данных;\nсоединение таблиц;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) \n\nПосчитать результаты тестирования. Результат попытки вычислить как количество правильных ответов, деленное на 3 (количество вопросов в каждой попытке) и умноженное на 100. Результат округлить до двух знаков после запятой. Вывести фамилию студента, название предмета, дату и результат. Последний столбец назвать Результат. Информацию отсортировать сначала по фамилии студента, потом по убыванию даты попытки.\n\nРезультат\n+-----------------+-------------------+--------------+-----------+\n| name_student    | name_subject      | date_attempt | Результат |\n+-----------------+-------------------+--------------+-----------+\n| Баранов Павел   | Основы SQL        | 2020-04-15   | 33.33     |\n| Баранов Павел   | Основы баз данных | 2020-03-23   | 66.67     |\n| Семенов Иван    | Основы SQL        | 2020-05-17   | 33.33     |\n| Семенов Иван    | Основы SQL        | 2020-04-15   | 66.67     |\n| Семенов Иван    | Основы SQL        | 2020-03-23   | 100.00    |\n| Яковлева Галина | Основы баз данных | 2020-04-21   | 100.00    |\n| Яковлева Галина | Основы баз данных | 2020-03-26   | 0.00      |\n+-----------------+-------------------+--------------+-----------+\n\nНаполнение таблиц\nтаблица student                   таблица subject\n+------------+-----------------+  +------------+-------------------+\n| student_id | name_student    |  | subject_id | name_subject      |\n+------------+-----------------+  +------------+-------------------+\n| 1          | Баранов Павел   |  | 1          | Основы SQL        |\n| 2          | Абрамова Катя   |  | 2          | Основы баз данных |\n| 3          | Семенов Иван    |  | 3          | Физика            |\n| 4          | Яковлева Галина |  +------------+-------------------+\n+------------+-----------------+\n\nтаблица question\n+-------------+------------------------------------------------------------+------------+\n| question_id | name_question                                              | subject_id |\n+-------------+------------------------------------------------------------+------------+\n| 1           | Запрос на выборку начинается с ключевого слова:            | 1          |\n| 2           | Условие, по которому отбираются записи, задается после...  | 1          |\n| 3           | Для сортировки используется:                               | 1          |\n| 4           | Какой запрос выбирает все записи из таблицы student:       | 1          |\n| 5           | Для внутреннего соединения таблиц используется оператор:   | 1          |\n| 6           | База данных - это:                                         | 2          |\n| 7           | Отношение - это:                                           | 2          |\n| 8           | Концептуальная модель используется для                     | 2          |\n| 9           | Какой тип данных не допустим в реляционной таблице?        | 2          |\n+-------------+------------------------------------------------------------+------------+\nтаблица answer\n+-----------+--------------------------------------------------------+-------------+------------+\n| answer_id | name_answer                                            | question_id | is_correct |\n+-----------+--------------------------------------------------------+-------------+------------+\n| 1         | UPDATE                                                 | 1           | 0          |\n| 2         | SELECT                                                 | 1           | 1          |\n| 3         | INSERT                                                 | 1           | 0          |\n| 4         | GROUP BY                                               | 2           | 0          |\n| 5         | FROM                                                   | 2           | 0          |\n| 6         | WHERE                                                  | 2           | 1          |\n| 7         | SELECT                                                 | 2           | 0          |\n| 8         | SORT                                                   | 3           | 0          |\n| 9         | ORDER BY                                               | 3           | 1          |\n| 10        | RANG BY                                                | 3           | 0          |\n| 11        | SELECT * FROM student                                  | 4           | 1          |\n| 12        | SELECT student                                         | 4           | 0          |\n| 13        | INNER JOIN                                             | 5           | 1          |\n| 14        | LEFT JOIN                                              | 5           | 0          |\n| 15        | RIGHT JOIN                                             | 5           | 0          |\n| 16        | CROSS JOIN                                             | 5           | 0          |\n| 17        | совокупность данных, организованныхпо определенным...  | 6           | 1          |\n| 18        | совокупность программ для хранения иобработки ...      | 6           | 0          |\n| 19        | строка                                                 | 7           | 0          |\n| 20        | столбец                                                | 7           | 0          |\n| 21        | таблица                                                | 7           | 1          |\n| 22        | обобщенное представление пользователей о данных        | 8           | 1          |\n| 23        | описание представления данных в памяти компьютера      | 8           | 0          |\n| 24        | база данных                                            | 8           | 0          |\n| 25        | file                                                   | 9           | 1          |\n| 26        | INT                                                    | 9           | 0          |\n| 27        | VARCHAR                                                | 9           | 0          |\n| 28        | DATE                                                   | 9           | 0          |\n+-----------+--------------------------------------------------------+-------------+------------+\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица testing\n+------------+------------+-------------+-----------+\n| testing_id | attempt_id | question_id | answer_id |\n+------------+------------+-------------+-----------+\n| 1          | 1          | 9           | 25        |\n| 2          | 1          | 7           | 19        |\n| 3          | 1          | 6           | 17        |\n| 4          | 2          | 3           | 9         |\n| 5          | 2          | 1           | 2         |\n| 6          | 2          | 4           | 11        |\n| 7          | 3          | 6           | 18        |\n| 8          | 3          | 8           | 24        |\n| 9          | 3          | 9           | 28        |\n| 10         | 4          | 1           | 2         |\n| 11         | 4          | 5           | 16        |\n| 12         | 4          | 3           | 10        |\n| 13         | 5          | 2           | 6         |\n| 14         | 5          | 1           | 2         |\n| 15         | 5          | 4           | 12        |\n| 16         | 6          | 6           | 17        |\n| 17         | 6          | 8           | 22        |\n| 18         | 6          | 7           | 21        |\n| 19         | 7          | 1           | 3         |\n| 20         | 7          | 4           | 11        |\n| 21         | 7          | 5           | 16        |\n+------------+------------+-------------+-----------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1155156,
                "text": {
                    "text": "Задание \nДля каждого вопроса вывести процент успешных решений, то есть отношение количества верных ответов к общему количеству ответов, значение округлить до 2-х знаков после запятой. Также вывести название предмета, к которому относится вопрос, и общее количество ответов на этот вопрос. В результат включить название дисциплины, вопросы по ней (столбец назвать Вопрос), а также два вычисляемых столбца Всего_ответов и Успешность. Информацию отсортировать сначала по названию дисциплины, потом по убыванию успешности, а потом по тексту вопроса в алфавитном порядке.\nПоскольку тексты вопросов могут быть длинными, обрезать их 30 символов и добавить многоточие \"...\".\nЛогическая схема базы данных (чтобы потренироваться выбирать таблицы):\n\nПояснение\n1. Чтобы выделить крайние левые n символов из строки используется функция LEFT(строка, n):\nLEFT(\"abcde\", 3) -> \"abc\"\n2. Соединение строк осуществляется с помощью функции CONCAT(строка_1, строка_2):\nCONCAT(\"ab\",\"cd\") -> \"abcd\"\n3. Поле is_correct - имеет тип BOOLEAN. Если ответ верный (TRUE), то в нем хранится 1, если неверный (FALSE), то в нем хранится 0. Можно заметить, что суммирование этого поля (при верно установленных связях) позволит посчитать количество верных ответов.\n4. Чтобы включить в запрос вопросы,  на которые все пользователи  ответили неверно, используйте операторы внешнего соединения. (Можно придумать и другой способ включения таких вопросов в результат).\n\nСвязанные шаги\n\nвыборка столбцов и их именование;\nвычисления для сгруппированных данных;\nсоединение таблиц;\nсортировка.\n\n\nТекст задания (чтобы не прокручивать страницу) \n\nДля каждого вопроса вывести процент успешных решений, то есть отношение количества верных ответов к общему количеству ответов, значение округлить до 2-х знаков после запятой. Также вывести название предмета, к которому относится вопрос, и общее количество ответов на этот вопрос. В результат включить название дисциплины, вопросы по ней (столбец назвать Вопрос), а также два вычисляемых столбца Всего_ответов и Успешность. Информацию отсортировать сначала по названию дисциплины, потом по убыванию успешности, а потом по тексту вопроса в алфавитном порядке.\nПоскольку тексты вопросов могут быть длинными, обрезать их 30 символов и добавить многоточие \"...\".\n\nРезультат\n+-------------------+-----------------------------------+---------------+------------+\n| name_subject      | Вопрос                            | Всего_ответов | Успешность |\n+-------------------+-----------------------------------+---------------+------------+\n| Основы SQL        | Условие, по которому отбираютс... | 1             | 100.00     |\n| Основы SQL        | Запрос на выборку начинается с... | 4             | 75.00      |\n| Основы SQL        | Какой запрос выбирает все запи... | 3             | 66.67      |\n| Основы SQL        | Для сортировки используется:...   | 2             | 50.00      |\n| Основы SQL        | Для внутреннего соединения таб... | 2             | 0.00       |\n| Основы баз данных | База данных - это:...             | 3             | 66.67      |\n| Основы баз данных | Какой тип данных не допустим в... | 2             | 50.00      |\n| Основы баз данных | Концептуальная модель использу... | 2             | 50.00      |\n| Основы баз данных | Отношение - это:...               | 2             | 50.00      |\n+-------------------+-----------------------------------+---------------+------------+\n\nНаполнение таблиц\nтаблица student                   таблица subject\n+------------+-----------------+  +------------+-------------------+\n| student_id | name_student    |  | subject_id | name_subject      |\n+------------+-----------------+  +------------+-------------------+\n| 1          | Баранов Павел   |  | 1          | Основы SQL        |\n| 2          | Абрамова Катя   |  | 2          | Основы баз данных |\n| 3          | Семенов Иван    |  | 3          | Физика            |\n| 4          | Яковлева Галина |  +------------+-------------------+\n+------------+-----------------+\n\nтаблица question\n+-------------+------------------------------------------------------------+------------+\n| question_id | name_question                                              | subject_id |\n+-------------+------------------------------------------------------------+------------+\n| 1           | Запрос на выборку начинается с ключевого слова:            | 1          |\n| 2           | Условие, по которому отбираются записи, задается после...  | 1          |\n| 3           | Для сортировки используется:                               | 1          |\n| 4           | Какой запрос выбирает все записи из таблицы student:       | 1          |\n| 5           | Для внутреннего соединения таблиц используется оператор:   | 1          |\n| 6           | База данных - это:                                         | 2          |\n| 7           | Отношение - это:                                           | 2          |\n| 8           | Концептуальная модель используется для                     | 2          |\n| 9           | Какой тип данных не допустим в реляционной таблице?        | 2          |\n+-------------+------------------------------------------------------------+------------+\nтаблица answer\n+-----------+--------------------------------------------------------+-------------+------------+\n| answer_id | name_answer                                            | question_id | is_correct |\n+-----------+--------------------------------------------------------+-------------+------------+\n| 1         | UPDATE                                                 | 1           | 0          |\n| 2         | SELECT                                                 | 1           | 1          |\n| 3         | INSERT                                                 | 1           | 0          |\n| 4         | GROUP BY                                               | 2           | 0          |\n| 5         | FROM                                                   | 2           | 0          |\n| 6         | WHERE                                                  | 2           | 1          |\n| 7         | SELECT                                                 | 2           | 0          |\n| 8         | SORT                                                   | 3           | 0          |\n| 9         | ORDER BY                                               | 3           | 1          |\n| 10        | RANG BY                                                | 3           | 0          |\n| 11        | SELECT * FROM student                                  | 4           | 1          |\n| 12        | SELECT student                                         | 4           | 0          |\n| 13        | INNER JOIN                                             | 5           | 1          |\n| 14        | LEFT JOIN                                              | 5           | 0          |\n| 15        | RIGHT JOIN                                             | 5           | 0          |\n| 16        | CROSS JOIN                                             | 5           | 0          |\n| 17        | совокупность данных, организованныхпо определенным...  | 6           | 1          |\n| 18        | совокупность программ для хранения иобработки ...      | 6           | 0          |\n| 19        | строка                                                 | 7           | 0          |\n| 20        | столбец                                                | 7           | 0          |\n| 21        | таблица                                                | 7           | 1          |\n| 22        | обобщенное представление пользователей о данных        | 8           | 1          |\n| 23        | описание представления данных в памяти компьютера      | 8           | 0          |\n| 24        | база данных                                            | 8           | 0          |\n| 25        | file                                                   | 9           | 1          |\n| 26        | INT                                                    | 9           | 0          |\n| 27        | VARCHAR                                                | 9           | 0          |\n| 28        | DATE                                                   | 9           | 0          |\n+-----------+--------------------------------------------------------+-------------+------------+\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица testing\n+------------+------------+-------------+-----------+\n| testing_id | attempt_id | question_id | answer_id |\n+------------+------------+-------------+-----------+\n| 1          | 1          | 9           | 25        |\n| 2          | 1          | 7           | 19        |\n| 3          | 1          | 6           | 17        |\n| 4          | 2          | 3           | 9         |\n| 5          | 2          | 1           | 2         |\n| 6          | 2          | 4           | 11        |\n| 7          | 3          | 6           | 18        |\n| 8          | 3          | 8           | 24        |\n| 9          | 3          | 9           | 28        |\n| 10         | 4          | 1           | 2         |\n| 11         | 4          | 5           | 16        |\n| 12         | 4          | 3           | 10        |\n| 13         | 5          | 2           | 6         |\n| 14         | 5          | 1           | 2         |\n| 15         | 5          | 4           | 12        |\n| 16         | 6          | 6           | 17        |\n| 17         | 6          | 8           | 22        |\n| 18         | 6          | 7           | 21        |\n| 19         | 7          | 1           | 3         |\n| 20         | 7          | 4           | 11        |\n| 21         | 7          | 5           | 16        |\n+------------+------------+-------------+-----------+\n\n",
                    "tables": []
                }
            },
            {
                "id_step": 1155152,
                "text": {
                    "text": "Задание\nПридумайте один или несколько запросов на выборку для предметной области «Тестирование» (в таблицы занесены данные, как на первом шаге урока). Проверьте, правильно ли они работают.\nПри желании можно формулировку запросов  разместить в комментариях. \nРазмещенные задания можно реализовать для закрепления материала урока.\nОценивайте понравившиеся Вам запросы.\nЛогическая схема базы данных:\n\nНаполнение таблиц\nтаблица student                   таблица subject\n+------------+-----------------+  +------------+-------------------+\n| student_id | name_student    |  | subject_id | name_subject      |\n+------------+-----------------+  +------------+-------------------+\n| 1          | Баранов Павел   |  | 1          | Основы SQL        |\n| 2          | Абрамова Катя   |  | 2          | Основы баз данных |\n| 3          | Семенов Иван    |  | 3          | Физика            |\n| 4          | Яковлева Галина |  +------------+-------------------+\n+------------+-----------------+\nтаблица question\n+-------------+------------------------------------------------------------+------------+\n| question_id | name_question                                              | subject_id |\n+-------------+------------------------------------------------------------+------------+\n| 1           | Запрос на выборку начинается с ключевого слова:            | 1          |\n| 2           | Условие, по которому отбираются записи, задается после...  | 1          |\n| 3           | Для сортировки используется:                               | 1          |\n| 4           | Какой запрос выбирает все записи из таблицы student:       | 1          |\n| 5           | Для внутреннего соединения таблиц используется оператор:   | 1          |\n| 6           | База данных - это:                                         | 2          |\n| 7           | Отношение - это:                                           | 2          |\n| 8           | Концептуальная модель используется для                     | 2          |\n| 9           | Какой тип данных не допустим в реляционной таблице?        | 2          |\n+-------------+------------------------------------------------------------+------------+\nтаблица answer\n+-----------+--------------------------------------------------------+-------------+------------+\n| answer_id | name_answer                                            | question_id | is_correct |\n+-----------+--------------------------------------------------------+-------------+------------+\n| 1         | UPDATE                                                 | 1           | 0          |\n| 2         | SELECT                                                 | 1           | 1          |\n| 3         | INSERT                                                 | 1           | 0          |\n| 4         | GROUP BY                                               | 2           | 0          |\n| 5         | FROM                                                   | 2           | 0          |\n| 6         | WHERE                                                  | 2           | 1          |\n| 7         | SELECT                                                 | 2           | 0          |\n| 8         | SORT                                                   | 3           | 0          |\n| 9         | ORDER BY                                               | 3           | 1          |\n| 10        | RANG BY                                                | 3           | 0          |\n| 11        | SELECT * FROM student                                  | 4           | 1          |\n| 12        | SELECT student                                         | 4           | 0          |\n| 13        | INNER JOIN                                             | 5           | 1          |\n| 14        | LEFT JOIN                                              | 5           | 0          |\n| 15        | RIGHT JOIN                                             | 5           | 0          |\n| 16        | CROSS JOIN                                             | 5           | 0          |\n| 17        | совокупность данных, организованныхпо определенным...  | 6           | 1          |\n| 18        | совокупность программ для хранения иобработки ...      | 6           | 0          |\n| 19        | строка                                                 | 7           | 0          |\n| 20        | столбец                                                | 7           | 0          |\n| 21        | таблица                                                | 7           | 1          |\n| 22        | обобщенное представление пользователей о данных        | 8           | 1          |\n| 23        | описание представления данных в памяти компьютера      | 8           | 0          |\n| 24        | база данных                                            | 8           | 0          |\n| 25        | file                                                   | 9           | 1          |\n| 26        | INT                                                    | 9           | 0          |\n| 27        | VARCHAR                                                | 9           | 0          |\n| 28        | DATE                                                   | 9           | 0          |\n+-----------+--------------------------------------------------------+-------------+------------+\nтаблица attempt\n+------------+------------+------------+--------------+--------+\n| attempt_id | student_id | subject_id | date_attempt | result |\n+------------+------------+------------+--------------+--------+\n| 1          | 1          | 2          | 2020-03-23   | 67     |\n| 2          | 3          | 1          | 2020-03-23   | 100    |\n| 3          | 4          | 2          | 2020-03-26   | 0      |\n| 4          | 1          | 1          | 2020-04-15   | 33     |\n| 5          | 3          | 1          | 2020-04-15   | 67     |\n| 6          | 4          | 2          | 2020-04-21   | 100    |\n| 7          | 3          | 1          | 2020-05-17   | 33     |\n+------------+------------+------------+--------------+--------+\nтаблица testing\n+------------+------------+-------------+-----------+\n| testing_id | attempt_id | question_id | answer_id |\n+------------+------------+-------------+-----------+\n| 1          | 1          | 9           | 25        |\n| 2          | 1          | 7           | 19        |\n| 3          | 1          | 6           | 17        |\n| 4          | 2          | 3           | 9         |\n| 5          | 2          | 1           | 2         |\n| 6          | 2          | 4           | 11        |\n| 7          | 3          | 6           | 18        |\n| 8          | 3          | 8           | 24        |\n| 9          | 3          | 9           | 28        |\n| 10         | 4          | 1           | 2         |\n| 11         | 4          | 5           | 16        |\n| 12         | 4          | 3           | 10        |\n| 13         | 5          | 2           | 6         |\n| 14         | 5          | 1           | 2         |\n| 15         | 5          | 4           | 12        |\n| 16         | 6          | 6           | 17        |\n| 17         | 6          | 8           | 22        |\n| 18         | 6          | 7           | 21        |\n| 19         | 7          | 1           | 3         |\n| 20         | 7          | 4           | 11        |\n| 21         | 7          | 5           | 16        |\n+------------+------------+-------------+-----------+\n\n",
                    "tables": []
                }
            }
        ]
    }
]